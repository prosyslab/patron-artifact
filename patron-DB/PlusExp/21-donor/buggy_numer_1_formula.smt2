(declare-rel BinOpExp (expr binop expr expr))
(declare-rel DUEdge (node node))
(declare-rel EvalLv (node lval loc))
(declare-rel Set (node lval expr))
(declare-rel ErrTrace (node node))
(declare-rel Arg (arg_list int expr))
(declare-rel LibCallExp (expr expr arg_list))
(declare-rel LvalExp (expr lval))
(declare-rel Skip (node))
(declare-rel UnOpExp (expr unop expr))
(declare-rel Assume (node expr))
(rule (Arg 25 26 27))
(rule (Assume 28 29))
(rule (BinOpExp 30 9 31 32))
(rule (BinOpExp 33 0 31 34))
(rule (BinOpExp 34 9 35 36))
(rule (BinOpExp 37 0 31 38))
(rule (BinOpExp 39 0 31 40))
(rule (BinOpExp 40 9 41 42))
(rule (BinOpExp 43 15 31 44))
(rule (DUEdge 45 28))
(rule (DUEdge 28 46))
(rule (DUEdge 46 47))
(rule (DUEdge 47 48))
(rule (DUEdge 48 49))
(rule (DUEdge 50 51))
(rule (DUEdge 51 49))
(rule (EvalLv 28 52 53))
(rule (EvalLv 46 52 53))
(rule (EvalLv 47 52 53))
(rule (EvalLv 47 54 55))
(rule (EvalLv 48 52 53))
(rule (EvalLv 48 56 57))
(rule (EvalLv 50 58 59))
(rule (EvalLv 50 60 61))
(rule (EvalLv 50 62 63))
(rule (EvalLv 49 52 53))
(rule (EvalLv 49 58 59))
(rule (LibCallExp 64 65 25))
(rule (LvalExp 31 52))
(rule (LvalExp 35 54))
(rule (LvalExp 65 60))
(rule (LvalExp 27 62))
(rule (LvalExp 38 58))
(rule (LvalExp 41 56))
(rule (Set 46 52 30))
(rule (Set 47 52 33))
(rule (Set 48 52 39))
(rule (Set 50 58 64))
(rule (Set 49 52 37))
(rule (Skip 45))
(rule (Skip 51))
(rule (UnOpExp 29 23 43))
(rule (=> (and (Set 49 52 37)
         (Set 50 58 64)
         (Set 48 52 39)
         (Set 47 52 33)
         (Set 46 52 30)
         (LvalExp 38 58)
         (LvalExp 31 52)
         (EvalLv 49 58 59)
         (EvalLv 49 52 53)
         (EvalLv 50 58 59)
         (EvalLv 48 52 53)
         (EvalLv 47 52 53)
         (EvalLv 46 52 53)
         (DUEdge 48 49)
         (DUEdge 47 48)
         (DUEdge 46 47)
         (BinOpExp 39 0 31 40)
         (BinOpExp 37 0 31 38)
         (BinOpExp 33 0 31 34)
         (BinOpExp 30 9 31 32))
    (ErrTrace 50 49)))
