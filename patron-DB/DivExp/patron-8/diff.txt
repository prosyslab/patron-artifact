Edit Script Summary:
Size: 1
============diff-0============
Meta Data:
Depth: 1
Previous Sibling Node: 
#line 236\nif (! pi->prgvolfirst) {\n#line 237\n  goto skip;\n} else {\n#line 239 \"/root/patron/17/src/libjasper/jpc/jpc_t2cod.c\"\n  pi->xstep = (uint_fast32_t )0;\n#line 240\n  pi->ystep = (uint_fast32_t )0;\n#line 242\n  picomp = pi->picomps;\n#line 242\n  compno = 0U;\n#line 242\n  while (1) {\n#line 242\n    if (! (compno < pi->numcomps)) {\n#line 242\n      goto while_break;\n    }\n#line 245\n    pirlvl = picomp->pirlvls;\n#line 245\n    rlvlno = 0U;\n#line 245\n    while (1) {\n#line 245\n      if (! (rlvlno < picomp->numrlvls)) {\n#line 245\n        goto while_break___0;\n      }\n#line 248\n      if ((unsigned long )(pirlvl->prcwidthexpn + picomp->numrlvls) > 8UL * sizeof(uint_fast32_t ) - 2UL) {\n#line 252\n        return (-1);\n      } else\n#line 248\n      if ((unsigned long )(pirlvl->prcheightexpn + picomp->numrlvls) > 8UL * sizeof(uint_fast32_t ) - 2UL) {\n#line 252\n        return (-1);\n      }\n#line 254\n      xstep = (unsigned int )(picomp->hsamp * (1UL << (((pirlvl->prcwidthexpn + picomp->numrlvls) - rlvlno) - 1U)));\n#line 256\n      ystep = (unsigned int )(picomp->vsamp * (1UL << (((pirlvl->prcheightexpn + picomp->numrlvls) - rlvlno) - 1U)));\n#line 258\n      if (! pi->xstep) {\n#line 258\n        tmp___0 = (unsigned long )xstep;\n      } else {\n#line 258\n        if (pi->xstep < (unsigned long )xstep) {\n#line 258\n          tmp = pi->xstep;\n        } else {\n#line 258\n          tmp = (unsigned long )xstep;\n        }\n#line 258\n        tmp___0 = tmp;\n      }\n#line 258\n      pi->xstep = tmp___0;\n#line 259\n      if (! pi->ystep) {\n#line 259\n        tmp___2 = (unsigned long )ystep;\n      } else {\n#line 259\n        if (pi->ystep < (unsigned long )ystep) {\n#line 259\n          tmp___1 = pi->ystep;\n        } else {\n#line 259\n          tmp___1 = (unsigned long )ystep;\n        }\n#line 259\n        tmp___2 = tmp___1;\n      }\n#line 259\n      pi->ystep = tmp___2;\n#line 246\n      pirlvl ++;\n#line 246\n      rlvlno ++;\n    }\n    while_break___0: \n#line 243\n    picomp ++;\n#line 243\n    compno ++;\n  }\n  while_break: \n#line 262\n  pi->prgvolfirst = 0;\n}



	InsertStmt: 
Function: jpc_pi_nextrpcl
# of Before:2
# of After:3
Diff Summary:
Inserted:
#line 265\nif (pi->xstep == 0UL) {\n#line 267\n  return (-1);\n}

================================
