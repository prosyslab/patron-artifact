2819a2820,2823
> # 50 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_07.c"
> static void goodG2B1()
> {
>     double * data;
2820a2825,2831
>     data = 
> # 54 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_07.c" 3 4
>           ((void *)0)
> # 54 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_07.c"
>               ;
>     if(staticFive!=5)
>     {
2821a2833,2836
>         printLine("Benign, fixed string");
>     }
>     else
>     {
2823c2838,2852
< void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_07_bad()
---
>         data = (double *)malloc(sizeof(*data));
>         if (data == 
> # 64 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_07.c" 3 4
>                    ((void *)0)
> # 64 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_07.c"
>                        ) {exit(-1);}
>         *data = 1.7E300;
>     }
> 
>     printDoubleLine(*data);
>     free(data);
> }
> 
> 
> static void goodG2B2()
2828c2857
< # 31 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_07.c" 3 4
---
> # 77 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_07.c" 3 4
2830c2859
< # 31 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_07.c"
---
> # 77 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_07.c"
2835,2836c2864
< 
<         data = (double *)malloc(sizeof(data));
---
>         data = (double *)malloc(sizeof(*data));
2838c2866
< # 37 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_07.c" 3 4
---
> # 82 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_07.c" 3 4
2840c2868
< # 37 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_07.c"
---
> # 82 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_07.c"
2847a2876,2881
> 
> void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_07_good()
> {
>     goodG2B1();
>     goodG2B2();
> }
2857a2892,2894
>     printLine("Calling good()...");
>     CWE122_Heap_Based_Buffer_Overflow__sizeof_double_07_good();
>     printLine("Finished good()");
2863,2865d2899
<     printLine("Calling bad()...");
<     CWE122_Heap_Based_Buffer_Overflow__sizeof_double_07_bad();
<     printLine("Finished bad()");
