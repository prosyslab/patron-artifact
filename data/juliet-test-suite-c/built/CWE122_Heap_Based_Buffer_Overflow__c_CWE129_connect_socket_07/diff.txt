4903a4904,4952
> # 149 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c"
> static void goodB2G1()
> {
>     int data;
> 
>     data = -1;
>     if(staticFive==5)
>     {
>         {
> 
> 
> 
> 
>             int recvResult;
>             struct sockaddr_in service;
>             int connectSocket = -1;
>             char inputBuffer[(3 * sizeof(data) + 2)];
>             do
>             {
> # 175 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c"
>                 connectSocket = socket(
> # 175 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c" 3 4
>                                       2
> # 175 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c"
>                                              , 
> # 175 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c" 3 4
>                                                SOCK_STREAM
> # 175 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c"
>                                                           , 
> # 175 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c" 3 4
>                                                             IPPROTO_TCP
> # 175 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c"
>                                                                        );
>                 if (connectSocket == -1)
>                 {
>                     break;
>                 }
>                 memset(&service, 0, sizeof(service));
>                 service.sin_family = 
> # 181 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c" 3 4
>                                     2
> # 181 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c"
>                                            ;
>                 service.sin_addr.s_addr = inet_addr("127.0.0.1");
>                 service.sin_port = htons(27015);
>                 if (connect(connectSocket, (struct sockaddr*)&service, sizeof(service)) == -1)
>                 {
>                     break;
>                 }
4905a4955,4959
>                 recvResult = recv(connectSocket, inputBuffer, (3 * sizeof(data) + 2) - 1, 0);
>                 if (recvResult == -1 || recvResult == 0)
>                 {
>                     break;
>                 }
4907c4961,5018
< void CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07_bad()
---
>                 inputBuffer[recvResult] = '\0';
> 
>                 data = atoi(inputBuffer);
>             }
>             while (0);
>             if (connectSocket != -1)
>             {
>                 close(connectSocket);
>             }
> 
> 
> 
> 
> 
> 
>         }
>     }
>     if(staticFive!=5)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
>         {
>             int i;
>             int * buffer = (int *)malloc(10 * sizeof(int));
>             if (buffer == 
> # 223 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c" 3 4
>                          ((void *)0)
> # 223 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c"
>                              ) {exit(-1);}
> 
>             for (i = 0; i < 10; i++)
>             {
>                 buffer[i] = 0;
>             }
> 
>             if (data >= 0 && data < (10))
>             {
>                 buffer[data] = 1;
> 
>                 for(i = 0; i < 10; i++)
>                 {
>                     printIntLine(buffer[i]);
>                 }
>             }
>             else
>             {
>                 printLine("ERROR: Array index is out-of-bounds");
>             }
>             free(buffer);
>         }
>     }
> }
> 
> 
> static void goodB2G2()
4925c5036
< # 75 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c"
---
> # 275 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c"
4927c5038
< # 75 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c" 3 4
---
> # 275 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c" 3 4
4929c5040
< # 75 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c"
---
> # 275 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c"
4931c5042
< # 75 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c" 3 4
---
> # 275 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c" 3 4
4933c5044
< # 75 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c"
---
> # 275 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c"
4935c5046
< # 75 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c" 3 4
---
> # 275 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c" 3 4
4937c5048
< # 75 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c"
---
> # 275 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c"
4945c5056
< # 81 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c" 3 4
---
> # 281 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c" 3 4
4947c5058
< # 81 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c"
---
> # 281 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c"
4986c5097,5195
< # 118 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c" 3 4
---
> # 318 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c" 3 4
>                          ((void *)0)
> # 318 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c"
>                              ) {exit(-1);}
> 
>             for (i = 0; i < 10; i++)
>             {
>                 buffer[i] = 0;
>             }
> 
>             if (data >= 0 && data < (10))
>             {
>                 buffer[data] = 1;
> 
>                 for(i = 0; i < 10; i++)
>                 {
>                     printIntLine(buffer[i]);
>                 }
>             }
>             else
>             {
>                 printLine("ERROR: Array index is out-of-bounds");
>             }
>             free(buffer);
>         }
>     }
> }
> 
> 
> static void goodG2B1()
> {
>     int data;
> 
>     data = -1;
>     if(staticFive!=5)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
> 
>         data = 7;
>     }
>     if(staticFive==5)
>     {
>         {
>             int i;
>             int * buffer = (int *)malloc(10 * sizeof(int));
>             if (buffer == 
> # 365 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c" 3 4
>                          ((void *)0)
> # 365 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c"
>                              ) {exit(-1);}
> 
>             for (i = 0; i < 10; i++)
>             {
>                 buffer[i] = 0;
>             }
> 
> 
>             if (data >= 0)
>             {
>                 buffer[data] = 1;
> 
>                 for(i = 0; i < 10; i++)
>                 {
>                     printIntLine(buffer[i]);
>                 }
>             }
>             else
>             {
>                 printLine("ERROR: Array index is negative.");
>             }
>             free(buffer);
>         }
>     }
> }
> 
> 
> static void goodG2B2()
> {
>     int data;
> 
>     data = -1;
>     if(staticFive==5)
>     {
> 
> 
>         data = 7;
>     }
>     if(staticFive==5)
>     {
>         {
>             int i;
>             int * buffer = (int *)malloc(10 * sizeof(int));
>             if (buffer == 
> # 408 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c" 3 4
4988c5197
< # 118 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c"
---
> # 408 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07.c"
5013a5223,5230
> 
> void CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B1();
>     goodG2B2();
> }
5023a5241,5243
>     printLine("Calling good()...");
>     CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07_good();
>     printLine("Finished good()");
5029,5031d5248
<     printLine("Calling bad()...");
<     CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_07_bad();
<     printLine("Finished bad()");
