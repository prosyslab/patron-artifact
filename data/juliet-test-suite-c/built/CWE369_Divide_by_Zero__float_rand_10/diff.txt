3731a3732
> # 49 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_rand_10.c"
3732a3734,3737
> # 49 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_rand_10.c"
> static void goodB2G1()
> {
>     float data;
3733a3739,3741
>     data = 0.0F;
>     if(globalTrue)
>     {
3734a3743,3746
>         data = (float)((int)(rand() & 1 ? (((unsigned)rand()<<30) ^ ((unsigned)rand()<<15) ^ rand()) : -(((unsigned)rand()<<30) ^ ((unsigned)rand()<<15) ^ rand()) - 1));
>     }
>     if(globalFalse)
>     {
3736,3737c3748,3766
< # 24 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_rand_10.c"
< void CWE369_Divide_by_Zero__float_rand_10_bad()
---
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         if(fabs(data) > 0.000001)
>         {
>             int result = (int)(100.0 / data);
>             printIntLine(result);
>         }
>         else
>         {
>             printLine("This would result in a divide by zero");
>         }
>     }
> }
> 
> 
> static void goodB2G2()
3748a3778,3808
> 
>         if(fabs(data) > 0.000001)
>         {
>             int result = (int)(100.0 / data);
>             printIntLine(result);
>         }
>         else
>         {
>             printLine("This would result in a divide by zero");
>         }
>     }
> }
> 
> 
> static void goodG2B1()
> {
>     float data;
> 
>     data = 0.0F;
>     if(globalFalse)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         data = 2.0F;
>     }
>     if(globalTrue)
>     {
3755a3816,3844
> 
> 
> static void goodG2B2()
> {
>     float data;
> 
>     data = 0.0F;
>     if(globalTrue)
>     {
> 
>         data = 2.0F;
>     }
>     if(globalTrue)
>     {
>         {
> 
>             int result = (int)(100.0 / data);
>             printIntLine(result);
>         }
>     }
> }
> 
> void CWE369_Divide_by_Zero__float_rand_10_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B1();
>     goodG2B2();
> }
3765a3855,3857
>     printLine("Calling good()...");
>     CWE369_Divide_by_Zero__float_rand_10_good();
>     printLine("Finished good()");
3771,3773d3862
<     printLine("Calling bad()...");
<     CWE369_Divide_by_Zero__float_rand_10_bad();
<     printLine("Finished bad()");
