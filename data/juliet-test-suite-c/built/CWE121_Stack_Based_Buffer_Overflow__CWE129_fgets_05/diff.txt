2821a2822,2861
> # 80 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_05.c"
> static void goodB2G1()
> {
>     int data;
> 
>     data = -1;
>     if(staticTrue)
>     {
>         {
>             char inputBuffer[(3 * sizeof(data) + 2)] = "";
> 
>             if (fgets(inputBuffer, (3 * sizeof(data) + 2), 
> # 90 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_05.c" 3 4
>                                                    stdin
> # 90 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_05.c"
>                                                         ) != 
> # 90 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_05.c" 3 4
>                                                              ((void *)0)
> # 90 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_05.c"
>                                                                  )
>             {
> 
>                 data = atoi(inputBuffer);
>             }
>             else
>             {
>                 printLine("fgets() failed.");
>             }
>         }
>     }
>     if(staticFalse)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
>         {
>             int i;
>             int buffer[10] = { 0 };
2822a2863,2865
>             if (data >= 0 && data < (10))
>             {
>                 buffer[data] = 1;
2823a2867,2878
>                 for(i = 0; i < 10; i++)
>                 {
>                     printIntLine(buffer[i]);
>                 }
>             }
>             else
>             {
>                 printLine("ERROR: Array index is out-of-bounds");
>             }
>         }
>     }
> }
2825c2880,2881
< void CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_05_bad()
---
> 
> static void goodB2G2()
2836c2892
< # 40 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_05.c" 3 4
---
> # 140 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_05.c" 3 4
2838c2894
< # 40 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_05.c"
---
> # 140 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_05.c"
2840c2896
< # 40 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_05.c" 3 4
---
> # 140 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_05.c" 3 4
2842c2898
< # 40 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_05.c"
---
> # 140 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_05.c"
2859a2916,2955
>             if (data >= 0 && data < (10))
>             {
>                 buffer[data] = 1;
> 
>                 for(i = 0; i < 10; i++)
>                 {
>                     printIntLine(buffer[i]);
>                 }
>             }
>             else
>             {
>                 printLine("ERROR: Array index is out-of-bounds");
>             }
>         }
>     }
> }
> 
> 
> static void goodG2B1()
> {
>     int data;
> 
>     data = -1;
>     if(staticFalse)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
> 
>         data = 7;
>     }
>     if(staticTrue)
>     {
>         {
>             int i;
>             int buffer[10] = { 0 };
> 
2876a2973,3016
> 
> 
> static void goodG2B2()
> {
>     int data;
> 
>     data = -1;
>     if(staticTrue)
>     {
> 
> 
>         data = 7;
>     }
>     if(staticTrue)
>     {
>         {
>             int i;
>             int buffer[10] = { 0 };
> 
> 
>             if (data >= 0)
>             {
>                 buffer[data] = 1;
> 
>                 for(i = 0; i < 10; i++)
>                 {
>                     printIntLine(buffer[i]);
>                 }
>             }
>             else
>             {
>                 printLine("ERROR: Array index is negative.");
>             }
>         }
>     }
> }
> 
> void CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_05_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B1();
>     goodG2B2();
> }
2886a3027,3029
>     printLine("Calling good()...");
>     CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_05_good();
>     printLine("Finished good()");
2892,2894d3034
<     printLine("Calling bad()...");
<     CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_05_bad();
<     printLine("Finished bad()");
