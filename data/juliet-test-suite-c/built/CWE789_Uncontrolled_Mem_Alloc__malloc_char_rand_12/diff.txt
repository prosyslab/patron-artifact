3240a3241
> # 96 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c"
3241a3243,3288
> # 96 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c"
> static void goodB2G()
> {
>     size_t data;
> 
>     data = 0;
>     if(globalReturnsTrueOrFalse())
>     {
> 
>         data = rand();
>     }
>     else
>     {
> 
>         data = rand();
>     }
>     if(globalReturnsTrueOrFalse())
>     {
>         {
>             char * myString;
> 
> 
> 
>             if (data > strlen("hello") && data < 100)
>             {
>                 myString = (char *)malloc(data*sizeof(char));
>                 if (myString == 
> # 121 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c" 3 4
>                                ((void *)0)
> # 121 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c"
>                                    ) {exit(-1);}
> 
>                 strcpy(myString, "hello");
>                 printLine(myString);
>                 free(myString);
>             }
>             else
>             {
>                 printLine("Input is less than the length of the source string or too large");
>             }
>         }
>     }
>     else
>     {
>         {
>             char * myString;
3244a3292,3311
>             if (data > strlen("hello") && data < 100)
>             {
>                 myString = (char *)malloc(data*sizeof(char));
>                 if (myString == 
> # 143 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c" 3 4
>                                ((void *)0)
> # 143 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c"
>                                    ) {exit(-1);}
> 
>                 strcpy(myString, "hello");
>                 printLine(myString);
>                 free(myString);
>             }
>             else
>             {
>                 printLine("Input is less than the length of the source string or too large");
>             }
>         }
>     }
> }
3248,3249c3315,3316
< # 28 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c"
< void CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12_bad()
---
> 
> static void goodG2B()
3257c3324
<         data = rand();
---
>         data = 20;
3275c3342
< # 53 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c" 3 4
---
> # 185 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c" 3 4
3277c3344
< # 53 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c"
---
> # 185 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c"
3297c3364
<             if (data > strlen("hello") && data < 100)
---
>             if (data > strlen("hello"))
3301c3368
< # 75 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c" 3 4
---
> # 207 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c" 3 4
3303c3370
< # 75 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c"
---
> # 207 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c"
3312c3379
<                 printLine("Input is less than the length of the source string or too large");
---
>                 printLine("Input is less than the length of the source string");
3316a3384,3389
> 
> void CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12_good()
> {
>     goodB2G();
>     goodG2B();
> }
3326a3400,3402
>     printLine("Calling good()...");
>     CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12_good();
>     printLine("Finished good()");
3332,3334d3407
<     printLine("Calling bad()...");
<     CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12_bad();
<     printLine("Finished bad()");
