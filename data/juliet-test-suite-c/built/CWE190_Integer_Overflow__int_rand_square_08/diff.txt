3746a3747,3750
> # 62 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__int_rand_square_08.c"
> static void goodB2G1()
> {
>     int data;
3747a3752,3754
>     data = 0;
>     if(staticReturnsTrue())
>     {
3748a3756,3759
>         data = ((int)(rand() & 1 ? (((unsigned)rand()<<30) ^ ((unsigned)rand()<<15) ^ rand()) : -(((unsigned)rand()<<30) ^ ((unsigned)rand()<<15) ^ rand()) - 1));
>     }
>     if(staticReturnsFalse())
>     {
3750c3761,3783
< void CWE190_Integer_Overflow__int_rand_square_08_bad()
---
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         if (data > 
> # 80 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__int_rand_square_08.c" 3 4
>                   (-0x7fffffff - 1) 
> # 80 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__int_rand_square_08.c"
>                           && abs(data) < (long)sqrt((double)0x7fffffff))
>         {
>             int result = data * data;
>             printIntLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
>     }
> }
> 
> 
> static void goodB2G2()
3761a3795,3829
> 
>         if (data > 
> # 106 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__int_rand_square_08.c" 3 4
>                   (-0x7fffffff - 1) 
> # 106 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__int_rand_square_08.c"
>                           && abs(data) < (long)sqrt((double)0x7fffffff))
>         {
>             int result = data * data;
>             printIntLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
>     }
> }
> 
> 
> static void goodG2B1()
> {
>     int data;
> 
>     data = 0;
>     if(staticReturnsFalse())
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         data = 2;
>     }
>     if(staticReturnsTrue())
>     {
3768a3837,3865
> 
> 
> static void goodG2B2()
> {
>     int data;
> 
>     data = 0;
>     if(staticReturnsTrue())
>     {
> 
>         data = 2;
>     }
>     if(staticReturnsTrue())
>     {
>         {
> 
>             int result = data * data;
>             printIntLine(result);
>         }
>     }
> }
> 
> void CWE190_Integer_Overflow__int_rand_square_08_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B1();
>     goodG2B2();
> }
3778a3876,3878
>     printLine("Calling good()...");
>     CWE190_Integer_Overflow__int_rand_square_08_good();
>     printLine("Finished good()");
3784,3786d3883
<     printLine("Calling bad()...");
<     CWE190_Integer_Overflow__int_rand_square_08_bad();
<     printLine("Finished bad()");
