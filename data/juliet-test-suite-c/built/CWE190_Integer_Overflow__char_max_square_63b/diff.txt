3731a3732
> # 39 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_max_square_63b.c"
3732a3734,3738
> # 39 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_max_square_63b.c"
> void CWE190_Integer_Overflow__char_max_square_63b_goodG2BSink(char * dataPtr)
> {
>     char data = *dataPtr;
>     {
3733a3740,3743
>         char result = data * data;
>         printHexCharLine(result);
>     }
> }
3736,3737c3746
< # 24 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_max_square_63b.c"
< void CWE190_Integer_Overflow__char_max_square_63b_badSink(char * dataPtr)
---
> void CWE190_Integer_Overflow__char_max_square_63b_goodB2GSink(char * dataPtr)
3740d3748
<     {
3741a3750,3751
>     if (abs((long)data) <= (long)sqrt((double)0x7f))
>     {
3743a3754,3757
>     }
>     else
>     {
>         printLine("data value is too large to perform arithmetic safely.");
