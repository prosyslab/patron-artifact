3252a3253,3278
> # 66 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_08.c"
> static void goodG2B1()
> {
>     char * data;
>     data = 
> # 69 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_08.c" 3 4
>           ((void *)0)
> # 69 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_08.c"
>               ;
>     if(staticReturnsFalse())
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         data = (char *)malloc((10+1)*sizeof(char));
>         if (data == 
> # 79 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_08.c" 3 4
>                    ((void *)0)
> # 79 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_08.c"
>                        ) {exit(-1);}
>     }
>     {
>         char source[10+1] = "AAAAAAAAAA";
3253a3280,3284
>         strcpy(data, source);
>         printLine(data);
>         free(data);
>     }
> }
3256c3287
< void CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_08_bad()
---
> static void goodG2B2()
3260c3291
< # 45 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_08.c" 3 4
---
> # 94 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_08.c" 3 4
3262c3293
< # 45 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_08.c"
---
> # 94 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_08.c"
3267c3298
<         data = (char *)malloc(10*sizeof(char));
---
>         data = (char *)malloc((10+1)*sizeof(char));
3269c3300
< # 50 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_08.c" 3 4
---
> # 99 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_08.c" 3 4
3271c3302
< # 50 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_08.c"
---
> # 99 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_08.c"
3281a3313,3318
> 
> void CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_08_good()
> {
>     goodG2B1();
>     goodG2B2();
> }
3291a3329,3331
>     printLine("Calling good()...");
>     CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_08_good();
>     printLine("Finished good()");
3297,3299d3336
<     printLine("Calling bad()...");
<     CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_08_bad();
<     printLine("Finished bad()");
