3731a3732
> # 74 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_15.c"
3732a3734,3744
> # 74 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_15.c"
> static void goodB2G1()
> {
>     float data;
> 
>     data = 0.0F;
>     switch(6)
>     {
>     case 6:
>     {
>         char inputBuffer[20];
3733a3746,3772
>         if (fgets(inputBuffer, 20, 
> # 85 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_15.c" 3 4
>                                                stdin
> # 85 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_15.c"
>                                                     ) != 
> # 85 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_15.c" 3 4
>                                                          ((void *)0)
> # 85 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_15.c"
>                                                              )
>         {
> 
>             data = (float)atof(inputBuffer);
>         }
>         else
>         {
>             printLine("fgets() failed.");
>         }
>     }
>     break;
>     default:
> 
>         printLine("Benign, fixed string");
>         break;
>     }
>     switch(8)
>     {
>     case 7:
3734a3774,3776
>         printLine("Benign, fixed string");
>         break;
>     default:
3735a3778,3789
>         if(fabs(data) > 0.000001)
>         {
>             int result = (int)(100.0 / data);
>             printIntLine(result);
>         }
>         else
>         {
>             printLine("This would result in a divide by zero");
>         }
>         break;
>     }
> }
3738,3739c3792
< # 26 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_15.c"
< void CWE369_Divide_by_Zero__float_fgets_15_bad()
---
> static void goodB2G2()
3751c3804
< # 37 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_15.c" 3 4
---
> # 134 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_15.c" 3 4
3753c3806
< # 37 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_15.c"
---
> # 134 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_15.c"
3755c3808
< # 37 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_15.c" 3 4
---
> # 134 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_15.c" 3 4
3757c3810
< # 37 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_15.c"
---
> # 134 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_15.c"
3776a3830,3867
> 
>         if(fabs(data) > 0.000001)
>         {
>             int result = (int)(100.0 / data);
>             printIntLine(result);
>         }
>         else
>         {
>             printLine("This would result in a divide by zero");
>         }
>         break;
>     default:
> 
>         printLine("Benign, fixed string");
>         break;
>     }
> }
> 
> 
> static void goodG2B1()
> {
>     float data;
> 
>     data = 0.0F;
>     switch(5)
>     {
>     case 6:
> 
>         printLine("Benign, fixed string");
>         break;
>     default:
> 
>         data = 2.0F;
>         break;
>     }
>     switch(7)
>     {
>     case 7:
3788a3880,3920
> 
> 
> static void goodG2B2()
> {
>     float data;
> 
>     data = 0.0F;
>     switch(6)
>     {
>     case 6:
> 
>         data = 2.0F;
>         break;
>     default:
> 
>         printLine("Benign, fixed string");
>         break;
>     }
>     switch(7)
>     {
>     case 7:
>     {
> 
>         int result = (int)(100.0 / data);
>         printIntLine(result);
>     }
>     break;
>     default:
> 
>         printLine("Benign, fixed string");
>         break;
>     }
> }
> 
> void CWE369_Divide_by_Zero__float_fgets_15_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B1();
>     goodG2B2();
> }
3798a3931,3933
>     printLine("Calling good()...");
>     CWE369_Divide_by_Zero__float_fgets_15_good();
>     printLine("Finished good()");
3804,3806d3938
<     printLine("Calling bad()...");
<     CWE369_Divide_by_Zero__float_fgets_15_bad();
<     printLine("Finished bad()");
