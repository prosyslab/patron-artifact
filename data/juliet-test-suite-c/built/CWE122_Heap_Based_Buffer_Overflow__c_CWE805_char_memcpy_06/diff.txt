3245a3246,3274
> # 55 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_06.c"
> static void goodG2B1()
> {
>     char * data;
>     data = 
> # 58 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_06.c" 3 4
>           ((void *)0)
> # 58 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_06.c"
>               ;
>     if(STATIC_CONST_FIVE!=5)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         data = (char *)malloc(100*sizeof(char));
>         if (data == 
> # 68 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_06.c" 3 4
>                    ((void *)0)
> # 68 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_06.c"
>                        ) {exit(-1);}
>         data[0] = '\0';
>     }
>     {
>         char source[100];
>         memset(source, 'C', 100-1);
>         source[100-1] = '\0';
3246a3276,3281
>         memcpy(data, source, 100*sizeof(char));
>         data[100-1] = '\0';
>         printLine(data);
>         free(data);
>     }
> }
3249c3284
< void CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_06_bad()
---
> static void goodG2B2()
3253c3288
< # 30 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_06.c" 3 4
---
> # 87 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_06.c" 3 4
3255c3290
< # 30 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_06.c"
---
> # 87 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_06.c"
3260c3295
<         data = (char *)malloc(50*sizeof(char));
---
>         data = (char *)malloc(100*sizeof(char));
3262c3297
< # 35 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_06.c" 3 4
---
> # 92 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_06.c" 3 4
3264c3299
< # 35 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_06.c"
---
> # 92 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_06.c"
3278a3314,3319
> 
> void CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_06_good()
> {
>     goodG2B1();
>     goodG2B2();
> }
3288a3330,3332
>     printLine("Calling good()...");
>     CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_06_good();
>     printLine("Finished good()");
3294,3296d3337
<     printLine("Calling bad()...");
<     CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_06_bad();
<     printLine("Finished bad()");
