3258a3259,3263
> # 64 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_04.c"
> static void good1()
> {
>     if(STATIC_CONST_FALSE)
>     {
3259a3265,3276
>         printLine("Benign, fixed string");
>     }
>     else
>     {
>         {
>             charVoid * structCharVoid = (charVoid *)malloc(sizeof(charVoid));
>             if (structCharVoid == 
> # 75 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_04.c" 3 4
>                                  ((void *)0)
> # 75 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_04.c"
>                                      ) {exit(-1);}
>             structCharVoid->voidSecond = (void *)"0123456789abcdef0123456789abcde";
3260a3278
>             printLine((char *)structCharVoid->voidSecond);
3262c3280,3290
< void CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_04_bad()
---
>             memcpy(structCharVoid->charFirst, "0123456789abcdef0123456789abcde", sizeof(structCharVoid->charFirst));
>             structCharVoid->charFirst[(sizeof(structCharVoid->charFirst)/sizeof(char))-1] = '\0';
>             printLine((char *)structCharVoid->charFirst);
>             printLine((char *)structCharVoid->voidSecond);
>             free(structCharVoid);
>         }
>     }
> }
> 
> 
> static void good2()
3269c3297
< # 45 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_04.c" 3 4
---
> # 96 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_04.c" 3 4
3271c3299
< # 45 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_04.c"
---
> # 96 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_04.c"
3277c3305
<             memcpy(structCharVoid->charFirst, "0123456789abcdef0123456789abcde", sizeof(*structCharVoid));
---
>             memcpy(structCharVoid->charFirst, "0123456789abcdef0123456789abcde", sizeof(structCharVoid->charFirst));
3284a3313,3318
> 
> void CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_04_good()
> {
>     good1();
>     good2();
> }
3294a3329,3331
>     printLine("Calling good()...");
>     CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_04_good();
>     printLine("Finished good()");
3300,3302d3336
<     printLine("Calling bad()...");
<     CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_04_bad();
<     printLine("Finished bad()");
