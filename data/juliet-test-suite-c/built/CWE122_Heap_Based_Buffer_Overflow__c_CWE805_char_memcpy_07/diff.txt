3247a3248,3276
> # 57 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_07.c"
> static void goodG2B1()
> {
>     char * data;
>     data = 
> # 60 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_07.c" 3 4
>           ((void *)0)
> # 60 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_07.c"
>               ;
>     if(staticFive!=5)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         data = (char *)malloc(100*sizeof(char));
>         if (data == 
> # 70 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_07.c" 3 4
>                    ((void *)0)
> # 70 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_07.c"
>                        ) {exit(-1);}
>         data[0] = '\0';
>     }
>     {
>         char source[100];
>         memset(source, 'C', 100-1);
>         source[100-1] = '\0';
3248a3278,3283
>         memcpy(data, source, 100*sizeof(char));
>         data[100-1] = '\0';
>         printLine(data);
>         free(data);
>     }
> }
3251c3286
< void CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_07_bad()
---
> static void goodG2B2()
3255c3290
< # 32 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_07.c" 3 4
---
> # 89 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_07.c" 3 4
3257c3292
< # 32 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_07.c"
---
> # 89 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_07.c"
3262c3297
<         data = (char *)malloc(50*sizeof(char));
---
>         data = (char *)malloc(100*sizeof(char));
3264c3299
< # 37 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_07.c" 3 4
---
> # 94 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_07.c" 3 4
3266c3301
< # 37 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_07.c"
---
> # 94 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_07.c"
3280a3316,3321
> 
> void CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_07_good()
> {
>     goodG2B1();
>     goodG2B2();
> }
3290a3332,3334
>     printLine("Calling good()...");
>     CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_07_good();
>     printLine("Finished good()");
3296,3298d3339
<     printLine("Calling bad()...");
<     CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memcpy_07_bad();
<     printLine("Finished bad()");
