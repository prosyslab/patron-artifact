4900c4900
< # 44 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_listen_socket_divide_64b.c"
---
> # 59 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_listen_socket_divide_64b.c"
4902,4903c4902,4903
< # 44 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_listen_socket_divide_64b.c"
< void CWE369_Divide_by_Zero__int_listen_socket_divide_64b_badSink(void * dataVoidPtr)
---
> # 59 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_listen_socket_divide_64b.c"
> void CWE369_Divide_by_Zero__int_listen_socket_divide_64b_goodG2BSink(void * dataVoidPtr)
4910a4911,4928
> }
> 
> 
> void CWE369_Divide_by_Zero__int_listen_socket_divide_64b_goodB2GSink(void * dataVoidPtr)
> {
> 
>     int * dataPtr = (int *)dataVoidPtr;
> 
>     int data = (*dataPtr);
> 
>     if( data != 0 )
>     {
>         printIntLine(100 / data);
>     }
>     else
>     {
>         printLine("This would result in a divide by zero");
>     }
