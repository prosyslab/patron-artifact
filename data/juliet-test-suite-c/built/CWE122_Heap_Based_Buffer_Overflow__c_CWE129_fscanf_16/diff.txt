2814,2817c2814,2815
< 
< 
< 
< void CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_16_bad()
---
> # 70 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_16.c"
> static void goodB2G()
2826c2824
< # 30 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_16.c" 3 4
---
> # 78 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_16.c" 3 4
2828c2826
< # 30 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_16.c"
---
> # 78 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_16.c"
2838c2836,2884
< # 38 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_16.c" 3 4
---
> # 86 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_16.c" 3 4
>                          ((void *)0)
> # 86 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_16.c"
>                              ) {exit(-1);}
> 
>             for (i = 0; i < 10; i++)
>             {
>                 buffer[i] = 0;
>             }
> 
>             if (data >= 0 && data < (10))
>             {
>                 buffer[data] = 1;
> 
>                 for(i = 0; i < 10; i++)
>                 {
>                     printIntLine(buffer[i]);
>                 }
>             }
>             else
>             {
>                 printLine("ERROR: Array index is out-of-bounds");
>             }
>             free(buffer);
>         }
>         break;
>     }
> }
> 
> 
> static void goodG2B()
> {
>     int data;
> 
>     data = -1;
>     while(1)
>     {
> 
> 
>         data = 7;
>         break;
>     }
>     while(1)
>     {
>         {
>             int i;
>             int * buffer = (int *)malloc(10 * sizeof(int));
>             if (buffer == 
> # 130 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_16.c" 3 4
2840c2886
< # 38 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_16.c"
---
> # 130 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_16.c"
2866a2913,2918
> 
> void CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_16_good()
> {
>     goodB2G();
>     goodG2B();
> }
2876a2929,2931
>     printLine("Calling good()...");
>     CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_16_good();
>     printLine("Finished good()");
2882,2884d2936
<     printLine("Calling bad()...");
<     CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fscanf_16_bad();
<     printLine("Finished bad()");
