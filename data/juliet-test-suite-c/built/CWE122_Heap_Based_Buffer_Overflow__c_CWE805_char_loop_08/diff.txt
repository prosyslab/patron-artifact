3255a3256,3285
> # 69 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_08.c"
> static void goodG2B1()
> {
>     char * data;
>     data = 
> # 72 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_08.c" 3 4
>           ((void *)0)
> # 72 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_08.c"
>               ;
>     if(staticReturnsFalse())
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         data = (char *)malloc(100*sizeof(char));
>         if (data == 
> # 82 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_08.c" 3 4
>                    ((void *)0)
> # 82 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_08.c"
>                        ) {exit(-1);}
>         data[0] = '\0';
>     }
>     {
>         size_t i;
>         char source[100];
>         memset(source, 'C', 100-1);
>         source[100-1] = '\0';
3256a3287,3295
>         for (i = 0; i < 100; i++)
>         {
>             data[i] = source[i];
>         }
>         data[100-1] = '\0';
>         printLine(data);
>         free(data);
>     }
> }
3259c3298
< void CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_08_bad()
---
> static void goodG2B2()
3263c3302
< # 40 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_08.c" 3 4
---
> # 105 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_08.c" 3 4
3265c3304
< # 40 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_08.c"
---
> # 105 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_08.c"
3270c3309
<         data = (char *)malloc(50*sizeof(char));
---
>         data = (char *)malloc(100*sizeof(char));
3272c3311
< # 45 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_08.c" 3 4
---
> # 110 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_08.c" 3 4
3274c3313
< # 45 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_08.c"
---
> # 110 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_08.c"
3292a3332,3337
> 
> void CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_08_good()
> {
>     goodG2B1();
>     goodG2B2();
> }
3302a3348,3350
>     printLine("Calling good()...");
>     CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_08_good();
>     printLine("Finished good()");
3308,3310d3355
<     printLine("Calling bad()...");
<     CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_loop_08_bad();
<     printLine("Finished bad()");
