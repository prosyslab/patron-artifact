5820a5821,5894
> # 131 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_04.c"
> static void goodB2G1()
> {
>     float data;
> 
>     data = 0.0F;
>     if(STATIC_CONST_TRUE)
>     {
>         {
> 
> 
> 
> 
>             int recvResult;
>             struct sockaddr_in service;
>             int connectSocket = -1;
>             char inputBuffer[20];
>             do
>             {
> 
> 
> 
> 
> 
> 
> 
>                 connectSocket = socket(
> # 156 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_04.c" 3 4
>                                       2
> # 156 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_04.c"
>                                              , 
> # 156 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_04.c" 3 4
>                                                SOCK_STREAM
> # 156 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_04.c"
>                                                           , 
> # 156 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_04.c" 3 4
>                                                             IPPROTO_TCP
> # 156 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_04.c"
>                                                                        );
>                 if (connectSocket == -1)
>                 {
>                     break;
>                 }
>                 memset(&service, 0, sizeof(service));
>                 service.sin_family = 
> # 162 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_04.c" 3 4
>                                     2
> # 162 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_04.c"
>                                            ;
>                 service.sin_addr.s_addr = inet_addr("127.0.0.1");
>                 service.sin_port = htons(27015);
>                 if (connect(connectSocket, (struct sockaddr*)&service, sizeof(service)) == -1)
>                 {
>                     break;
>                 }
> 
> 
> 
>                 recvResult = recv(connectSocket, inputBuffer, 20 - 1, 0);
>                 if (recvResult == -1 || recvResult == 0)
>                 {
>                     break;
>                 }
> 
>                 inputBuffer[recvResult] = '\0';
> 
>                 data = (float)atof(inputBuffer);
>             }
>             while (0);
>             if (connectSocket != -1)
>             {
>                 close(connectSocket);
>             }
> 
5824c5898,5923
< void CWE369_Divide_by_Zero__float_connect_socket_04_bad()
---
> 
> 
>         }
>     }
>     if(STATIC_CONST_FALSE)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         if(fabs(data) > 0.000001)
>         {
>             int result = (int)(100.0 / data);
>             printIntLine(result);
>         }
>         else
>         {
>             printLine("This would result in a divide by zero");
>         }
>     }
> }
> 
> 
> static void goodB2G2()
5850c5949
< # 77 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_04.c" 3 4
---
> # 241 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_04.c" 3 4
5852c5951
< # 77 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_04.c"
---
> # 241 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_04.c"
5854c5953
< # 77 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_04.c" 3 4
---
> # 241 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_04.c" 3 4
5856c5955
< # 77 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_04.c"
---
> # 241 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_04.c"
5858c5957
< # 77 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_04.c" 3 4
---
> # 241 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_04.c" 3 4
5860c5959
< # 77 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_04.c"
---
> # 241 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_04.c"
5868c5967
< # 83 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_04.c" 3 4
---
> # 247 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_04.c" 3 4
5870c5969
< # 83 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_04.c"
---
> # 247 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_04.c"
5905a6005,6056
> 
>         if(fabs(data) > 0.000001)
>         {
>             int result = (int)(100.0 / data);
>             printIntLine(result);
>         }
>         else
>         {
>             printLine("This would result in a divide by zero");
>         }
>     }
> }
> 
> 
> static void goodG2B1()
> {
>     float data;
> 
>     data = 0.0F;
>     if(STATIC_CONST_FALSE)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         data = 2.0F;
>     }
>     if(STATIC_CONST_TRUE)
>     {
>         {
> 
>             int result = (int)(100.0 / data);
>             printIntLine(result);
>         }
>     }
> }
> 
> 
> static void goodG2B2()
> {
>     float data;
> 
>     data = 0.0F;
>     if(STATIC_CONST_TRUE)
>     {
> 
>         data = 2.0F;
>     }
>     if(STATIC_CONST_TRUE)
>     {
5912a6064,6071
> 
> void CWE369_Divide_by_Zero__float_connect_socket_04_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B1();
>     goodG2B2();
> }
5922a6082,6084
>     printLine("Calling good()...");
>     CWE369_Divide_by_Zero__float_connect_socket_04_good();
>     printLine("Finished good()");
5928,5930d6089
<     printLine("Calling bad()...");
<     CWE369_Divide_by_Zero__float_connect_socket_04_bad();
<     printLine("Finished bad()");
