3240a3241
> # 67 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_11.c"
3241a3243,3262
> # 67 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_11.c"
> static void goodB2G1()
> {
>     size_t data;
> 
>     data = 0;
>     if(globalReturnsTrue())
>     {
> 
>         data = rand();
>     }
>     if(globalReturnsFalse())
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
>         {
>             char * myString;
3244a3266,3273
>             if (data > strlen("hello") && data < 100)
>             {
>                 myString = (char *)malloc(data*sizeof(char));
>                 if (myString == 
> # 92 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_11.c" 3 4
>                                ((void *)0)
> # 92 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_11.c"
>                                    ) {exit(-1);}
3245a3275,3285
>                 strcpy(myString, "hello");
>                 printLine(myString);
>                 free(myString);
>             }
>             else
>             {
>                 printLine("Input is less than the length of the source string or too large");
>             }
>         }
>     }
> }
3248,3249c3288
< # 28 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_11.c"
< void CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_11_bad()
---
> static void goodB2G2()
3265a3305,3348
>             if (data > strlen("hello") && data < 100)
>             {
>                 myString = (char *)malloc(data*sizeof(char));
>                 if (myString == 
> # 127 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_11.c" 3 4
>                                ((void *)0)
> # 127 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_11.c"
>                                    ) {exit(-1);}
> 
>                 strcpy(myString, "hello");
>                 printLine(myString);
>                 free(myString);
>             }
>             else
>             {
>                 printLine("Input is less than the length of the source string or too large");
>             }
>         }
>     }
> }
> 
> 
> static void goodG2B1()
> {
>     size_t data;
> 
>     data = 0;
>     if(globalReturnsFalse())
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         data = 20;
>     }
>     if(globalReturnsTrue())
>     {
>         {
>             char * myString;
> 
> 
> 
3270c3353
< # 48 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_11.c" 3 4
---
> # 167 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_11.c" 3 4
3272c3355
< # 48 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_11.c"
---
> # 167 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_11.c"
3285a3369,3415
> 
> 
> static void goodG2B2()
> {
>     size_t data;
> 
>     data = 0;
>     if(globalReturnsTrue())
>     {
> 
>         data = 20;
>     }
>     if(globalReturnsTrue())
>     {
>         {
>             char * myString;
> 
> 
> 
>             if (data > strlen("hello"))
>             {
>                 myString = (char *)malloc(data*sizeof(char));
>                 if (myString == 
> # 202 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_11.c" 3 4
>                                ((void *)0)
> # 202 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_11.c"
>                                    ) {exit(-1);}
> 
>                 strcpy(myString, "hello");
>                 printLine(myString);
>                 free(myString);
>             }
>             else
>             {
>                 printLine("Input is less than the length of the source string");
>             }
>         }
>     }
> }
> 
> void CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_11_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B1();
>     goodG2B2();
> }
3295a3426,3428
>     printLine("Calling good()...");
>     CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_11_good();
>     printLine("Finished good()");
3301,3303d3433
<     printLine("Calling bad()...");
<     CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_11_bad();
<     printLine("Finished bad()");
