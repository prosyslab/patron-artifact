2819a2820,2832
> # 52 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_34.c"
> static void goodG2B()
> {
>     char data;
>     CWE191_Integer_Underflow__char_rand_multiply_34_unionType myUnion;
>     data = ' ';
> 
>     data = -2;
>     myUnion.unionFirst = data;
>     {
>         char data = myUnion.unionSecond;
>         if(data < 0)
>         {
2820a2834,2838
>             char result = data * 2;
>             printHexCharLine(result);
>         }
>     }
> }
2823c2841
< void CWE191_Integer_Underflow__char_rand_multiply_34_bad()
---
> static void goodB2G()
2836,2837c2854,2866
<             char result = data * 2;
<             printHexCharLine(result);
---
>             if (data > (
> # 85 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_34.c" 3 4
>                        (-0x7f - 1)
> # 85 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_34.c"
>                                /2))
>             {
>                 char result = data * 2;
>                 printHexCharLine(result);
>             }
>             else
>             {
>                 printLine("data value is too small to perform multiplication.");
>             }
2840a2870,2875
> 
> void CWE191_Integer_Underflow__char_rand_multiply_34_good()
> {
>     goodG2B();
>     goodB2G();
> }
2850a2886,2888
>     printLine("Calling good()...");
>     CWE191_Integer_Underflow__char_rand_multiply_34_good();
>     printLine("Finished good()");
2856,2858d2893
<     printLine("Calling bad()...");
<     CWE191_Integer_Underflow__char_rand_multiply_34_bad();
<     printLine("Finished bad()");
