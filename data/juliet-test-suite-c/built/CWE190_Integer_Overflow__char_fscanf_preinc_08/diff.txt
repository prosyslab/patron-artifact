2826a2827,2833
> # 60 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_fscanf_preinc_08.c"
> static void goodB2G1()
> {
>     char data;
>     data = ' ';
>     if(staticReturnsTrue())
>     {
2827a2835,2860
>         fscanf (
> # 67 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_fscanf_preinc_08.c" 3 4
>                stdin
> # 67 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_fscanf_preinc_08.c"
>                     , "%c", &data);
>     }
>     if(staticReturnsFalse())
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         if (data < 0x7f)
>         {
>             ++data;
>             char result = data;
>             printHexCharLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
>     }
> }
2830c2863
< void CWE190_Integer_Overflow__char_fscanf_preinc_08_bad()
---
> static void goodB2G2()
2838c2871
< # 42 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_fscanf_preinc_08.c" 3 4
---
> # 98 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_fscanf_preinc_08.c" 3 4
2840c2873
< # 42 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_fscanf_preinc_08.c"
---
> # 98 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__char_fscanf_preinc_08.c"
2844a2878,2929
> 
>         if (data < 0x7f)
>         {
>             ++data;
>             char result = data;
>             printHexCharLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
>     }
> }
> 
> 
> static void goodG2B1()
> {
>     char data;
>     data = ' ';
>     if(staticReturnsFalse())
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         data = 2;
>     }
>     if(staticReturnsTrue())
>     {
>         {
> 
>             ++data;
>             char result = data;
>             printHexCharLine(result);
>         }
>     }
> }
> 
> 
> static void goodG2B2()
> {
>     char data;
>     data = ' ';
>     if(staticReturnsTrue())
>     {
> 
>         data = 2;
>     }
>     if(staticReturnsTrue())
>     {
2852a2938,2945
> 
> void CWE190_Integer_Overflow__char_fscanf_preinc_08_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B1();
>     goodG2B2();
> }
2862a2956,2958
>     printLine("Calling good()...");
>     CWE190_Integer_Overflow__char_fscanf_preinc_08_good();
>     printLine("Finished good()");
2868,2870d2963
<     printLine("Calling bad()...");
<     CWE190_Integer_Overflow__char_fscanf_preinc_08_bad();
<     printLine("Finished bad()");
