2817a2818,2833
> # 52 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_45.c"
> static void goodG2BSink()
> {
>     char data = CWE191_Integer_Underflow__char_rand_multiply_45_goodG2BData;
>     if(data < 0)
>     {
> 
>         char result = data * 2;
>         printHexCharLine(result);
>     }
> }
> 
> static void goodG2B()
> {
>     char data;
>     data = ' ';
2818a2835,2838
>     data = -2;
>     CWE191_Integer_Underflow__char_rand_multiply_45_goodG2BData = data;
>     goodG2BSink();
> }
2821c2841
< static void badSink()
---
> static void goodB2GSink()
2823c2843
<     char data = CWE191_Integer_Underflow__char_rand_multiply_45_badData;
---
>     char data = CWE191_Integer_Underflow__char_rand_multiply_45_goodB2GData;
2827,2828c2847,2859
<         char result = data * 2;
<         printHexCharLine(result);
---
>         if (data > (
> # 80 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_45.c" 3 4
>                    (-0x7f - 1)
> # 80 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_multiply_45.c"
>                            /2))
>         {
>             char result = data * 2;
>             printHexCharLine(result);
>         }
>         else
>         {
>             printLine("data value is too small to perform multiplication.");
>         }
2832c2863
< void CWE191_Integer_Underflow__char_rand_multiply_45_bad()
---
> static void goodB2G()
2838,2839c2869,2876
<     CWE191_Integer_Underflow__char_rand_multiply_45_badData = data;
<     badSink();
---
>     CWE191_Integer_Underflow__char_rand_multiply_45_goodB2GData = data;
>     goodB2GSink();
> }
> 
> void CWE191_Integer_Underflow__char_rand_multiply_45_good()
> {
>     goodG2B();
>     goodB2G();
2850a2888,2890
>     printLine("Calling good()...");
>     CWE191_Integer_Underflow__char_rand_multiply_45_good();
>     printLine("Finished good()");
2856,2858d2895
<     printLine("Calling bad()...");
<     CWE191_Integer_Underflow__char_rand_multiply_45_bad();
<     printLine("Finished bad()");
