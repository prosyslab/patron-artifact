4904a4905,4954
> # 130 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_05.c"
> static void goodB2G1()
> {
>     int data;
> 
>     data = 0;
>     if(staticTrue)
>     {
>         {
> 
> 
> 
> 
>             int recvResult;
>             struct sockaddr_in service;
>             int connectSocket = -1;
>             char inputBuffer[(3 * sizeof(data) + 2)];
>             do
>             {
> # 156 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_05.c"
>                 connectSocket = socket(
> # 156 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_05.c" 3 4
>                                       2
> # 156 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_05.c"
>                                              , 
> # 156 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_05.c" 3 4
>                                                SOCK_STREAM
> # 156 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_05.c"
>                                                           , 
> # 156 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_05.c" 3 4
>                                                             IPPROTO_TCP
> # 156 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_05.c"
>                                                                        );
>                 if (connectSocket == -1)
>                 {
>                     break;
>                 }
>                 memset(&service, 0, sizeof(service));
>                 service.sin_family = 
> # 162 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_05.c" 3 4
>                                     2
> # 162 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_05.c"
>                                            ;
>                 service.sin_addr.s_addr = inet_addr("127.0.0.1");
>                 service.sin_port = htons(27015);
>                 if (connect(connectSocket, (struct sockaddr*)&service, sizeof(service)) == -1)
>                 {
>                     break;
>                 }
> 
4905a4956,4962
>                 recvResult = recv(connectSocket, inputBuffer, (3 * sizeof(data) + 2) - 1, 0);
>                 if (recvResult == -1 || recvResult == 0)
>                 {
>                     break;
>                 }
> 
>                 inputBuffer[recvResult] = '\0';
4906a4964,4980
>                 data = atoi(inputBuffer);
>             }
>             while (0);
>             if (connectSocket != -1)
>             {
>                 close(connectSocket);
>             }
> 
> 
> 
> 
> 
> 
>         }
>     }
>     if(staticFalse)
>     {
4908c4982,5003
< void CWE190_Integer_Overflow__int_connect_socket_multiply_05_bad()
---
>         printLine("Benign, fixed string");
>     }
>     else
>     {
>         if(data > 0)
>         {
> 
>             if (data < (0x7fffffff/2))
>             {
>                 int result = data * 2;
>                 printIntLine(result);
>             }
>             else
>             {
>                 printLine("data value is too large to perform arithmetic safely.");
>             }
>         }
>     }
> }
> 
> 
> static void goodB2G2()
4926c5021
< # 76 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_05.c"
---
> # 244 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_05.c"
4928c5023
< # 76 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_05.c" 3 4
---
> # 244 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_05.c" 3 4
4930c5025
< # 76 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_05.c"
---
> # 244 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_05.c"
4932c5027
< # 76 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_05.c" 3 4
---
> # 244 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_05.c" 3 4
4934c5029
< # 76 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_05.c"
---
> # 244 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_05.c"
4936c5031
< # 76 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_05.c" 3 4
---
> # 244 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_05.c" 3 4
4938c5033
< # 76 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_05.c"
---
> # 244 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_05.c"
4946c5041
< # 82 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_05.c" 3 4
---
> # 250 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_05.c" 3 4
4948c5043
< # 82 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_05.c"
---
> # 250 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_05.c"
4985a5081,5136
>             if (data < (0x7fffffff/2))
>             {
>                 int result = data * 2;
>                 printIntLine(result);
>             }
>             else
>             {
>                 printLine("data value is too large to perform arithmetic safely.");
>             }
>         }
>     }
> }
> 
> 
> static void goodG2B1()
> {
>     int data;
> 
>     data = 0;
>     if(staticFalse)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         data = 2;
>     }
>     if(staticTrue)
>     {
>         if(data > 0)
>         {
> 
>             int result = data * 2;
>             printIntLine(result);
>         }
>     }
> }
> 
> 
> static void goodG2B2()
> {
>     int data;
> 
>     data = 0;
>     if(staticTrue)
>     {
> 
>         data = 2;
>     }
>     if(staticTrue)
>     {
>         if(data > 0)
>         {
> 
4990a5142,5149
> 
> void CWE190_Integer_Overflow__int_connect_socket_multiply_05_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B1();
>     goodG2B2();
> }
5000a5160,5162
>     printLine("Calling good()...");
>     CWE190_Integer_Overflow__int_connect_socket_multiply_05_good();
>     printLine("Finished good()");
5006,5008d5167
<     printLine("Calling bad()...");
<     CWE190_Integer_Overflow__int_connect_socket_multiply_05_bad();
<     printLine("Finished bad()");
