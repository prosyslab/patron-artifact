2813a2814,2817
> # 44 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_14.c"
> static void goodG2B1()
> {
>     double * data;
2814a2819,2825
>     data = 
> # 48 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_14.c" 3 4
>           ((void *)0)
> # 48 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_14.c"
>               ;
>     if(globalFive!=5)
>     {
2815a2827,2830
>         printLine("Benign, fixed string");
>     }
>     else
>     {
2817c2832,2846
< void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_14_bad()
---
>         data = (double *)malloc(sizeof(*data));
>         if (data == 
> # 58 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_14.c" 3 4
>                    ((void *)0)
> # 58 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_14.c"
>                        ) {exit(-1);}
>         *data = 1.7E300;
>     }
> 
>     printDoubleLine(*data);
>     free(data);
> }
> 
> 
> static void goodG2B2()
2822c2851
< # 25 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_14.c" 3 4
---
> # 71 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_14.c" 3 4
2824c2853
< # 25 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_14.c"
---
> # 71 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_14.c"
2829,2830c2858
< 
<         data = (double *)malloc(sizeof(data));
---
>         data = (double *)malloc(sizeof(*data));
2832c2860
< # 31 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_14.c" 3 4
---
> # 76 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_14.c" 3 4
2834c2862
< # 31 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_14.c"
---
> # 76 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_14.c"
2841a2870,2875
> 
> void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_14_good()
> {
>     goodG2B1();
>     goodG2B2();
> }
2851a2886,2888
>     printLine("Calling good()...");
>     CWE122_Heap_Based_Buffer_Overflow__sizeof_double_14_good();
>     printLine("Finished good()");
2857,2859d2893
<     printLine("Calling bad()...");
<     CWE122_Heap_Based_Buffer_Overflow__sizeof_double_14_bad();
<     printLine("Finished bad()");
