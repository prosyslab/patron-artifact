2813a2814,2820
> # 47 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_min_predec_10.c"
> static void goodB2G1()
> {
>     char data;
>     data = ' ';
>     if(globalTrue)
>     {
2814a2822,2851
>         data = 
> # 54 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_min_predec_10.c" 3 4
>               (-0x7f - 1)
> # 54 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_min_predec_10.c"
>                       ;
>     }
>     if(globalFalse)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         if (data > 
> # 64 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_min_predec_10.c" 3 4
>                   (-0x7f - 1)
> # 64 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_min_predec_10.c"
>                           )
>         {
>             --data;
>             char result = data;
>             printHexCharLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
>     }
> }
2817c2854
< void CWE191_Integer_Underflow__char_min_predec_10_bad()
---
> static void goodB2G2()
2825c2862
< # 29 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_min_predec_10.c" 3 4
---
> # 85 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_min_predec_10.c" 3 4
2827c2864
< # 29 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_min_predec_10.c"
---
> # 85 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_min_predec_10.c"
2831a2869,2924
> 
>         if (data > 
> # 90 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_min_predec_10.c" 3 4
>                   (-0x7f - 1)
> # 90 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_min_predec_10.c"
>                           )
>         {
>             --data;
>             char result = data;
>             printHexCharLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
>     }
> }
> 
> 
> static void goodG2B1()
> {
>     char data;
>     data = ' ';
>     if(globalFalse)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         data = -2;
>     }
>     if(globalTrue)
>     {
>         {
> 
>             --data;
>             char result = data;
>             printHexCharLine(result);
>         }
>     }
> }
> 
> 
> static void goodG2B2()
> {
>     char data;
>     data = ' ';
>     if(globalTrue)
>     {
> 
>         data = -2;
>     }
>     if(globalTrue)
>     {
2839a2933,2940
> 
> void CWE191_Integer_Underflow__char_min_predec_10_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B1();
>     goodG2B2();
> }
2849a2951,2953
>     printLine("Calling good()...");
>     CWE191_Integer_Underflow__char_min_predec_10_good();
>     printLine("Finished good()");
2855,2857d2958
<     printLine("Calling bad()...");
<     CWE191_Integer_Underflow__char_min_predec_10_bad();
<     printLine("Finished bad()");
