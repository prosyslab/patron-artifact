3239a3240
> # 64 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_21.c"
3240a3242,3245
> # 64 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_21.c"
> static int goodB2G1Static = 0;
> static int goodB2G2Static = 0;
> static int goodG2BStatic = 0;
3242a3248,3271
> static void goodB2G1Sink(void * data)
> {
>     if(goodB2G1Static)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
>         {
> 
>             size_t dataLen = wcslen((wchar_t *)data);
>             void * dest = (void *)calloc(dataLen+1, sizeof(wchar_t));
>             if (dest == 
> # 82 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_21.c" 3 4
>                        ((void *)0)
> # 82 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_21.c"
>                            ) {exit(-1);}
>             (void)wcscpy(dest, data);
>             printWLine((wchar_t *)dest);
>             free(dest);
>         }
>     }
> }
3243a3273,3295
> static void goodB2G1()
> {
>     void * data;
>     data = 
> # 93 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_21.c" 3 4
>           ((void *)0)
> # 93 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_21.c"
>               ;
>     {
>         wchar_t * dataBadBuffer = (wchar_t *)malloc(50*sizeof(wchar_t));
>         if (dataBadBuffer == 
> # 96 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_21.c" 3 4
>                             ((void *)0)
> # 96 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_21.c"
>                                 ) {exit(-1);}
>         wmemset(dataBadBuffer, L'A', 50-1);
>         dataBadBuffer[50-1] = L'\0';
> 
>         data = (void *)dataBadBuffer;
>     }
>     goodB2G1Static = 0;
>     goodB2G1Sink(data);
> }
3245,3246d3296
< # 25 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_21.c"
< static int badStatic = 0;
3248c3298
< static void badSink(void * data)
---
> static void goodB2G2Sink(void * data)
3250c3300
<     if(badStatic)
---
>     if(goodB2G2Static)
3254c3304
<             size_t dataLen = strlen((char *)data);
---
>             size_t dataLen = wcslen((wchar_t *)data);
3257c3307
< # 35 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_21.c" 3 4
---
> # 115 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_21.c" 3 4
3259c3309
< # 35 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_21.c"
---
> # 115 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_21.c"
3262c3312
<             printLine((char *)dest);
---
>             printWLine((wchar_t *)dest);
3268c3318
< void CWE122_Heap_Based_Buffer_Overflow__CWE135_21_bad()
---
> static void goodB2G2()
3272c3322
< # 46 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_21.c" 3 4
---
> # 126 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_21.c" 3 4
3274c3324
< # 46 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_21.c"
---
> # 126 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_21.c"
3279c3329
< # 49 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_21.c" 3 4
---
> # 129 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_21.c" 3 4
3281c3331
< # 49 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_21.c"
---
> # 129 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_21.c"
3288,3289c3338,3391
<     badStatic = 1;
<     badSink(data);
---
>     goodB2G2Static = 1;
>     goodB2G2Sink(data);
> }
> 
> 
> static void goodG2BSink(void * data)
> {
>     if(goodG2BStatic)
>     {
>         {
> 
>             size_t dataLen = strlen((char *)data);
>             void * dest = (void *)calloc(dataLen+1, 1);
>             if (dest == 
> # 148 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_21.c" 3 4
>                        ((void *)0)
> # 148 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_21.c"
>                            ) {exit(-1);}
>             (void)strcpy(dest, data);
>             printLine((char *)dest);
>             free(dest);
>         }
>     }
> }
> 
> static void goodG2B()
> {
>     void * data;
>     data = 
> # 159 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_21.c" 3 4
>           ((void *)0)
> # 159 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_21.c"
>               ;
>     {
>         char * dataGoodBuffer = (char *)malloc(50*sizeof(char));
>         if (dataGoodBuffer == 
> # 162 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_21.c" 3 4
>                              ((void *)0)
> # 162 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_21.c"
>                                  ) {exit(-1);}
>         memset(dataGoodBuffer, 'A', 50-1);
>         dataGoodBuffer[50-1] = '\0';
> 
>         data = (void *)dataGoodBuffer;
>     }
>     goodG2BStatic = 1;
>     goodG2BSink(data);
> }
> 
> void CWE122_Heap_Based_Buffer_Overflow__CWE135_21_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B();
3300a3403,3405
>     printLine("Calling good()...");
>     CWE122_Heap_Based_Buffer_Overflow__CWE135_21_good();
>     printLine("Finished good()");
3306,3308d3410
<     printLine("Calling bad()...");
<     CWE122_Heap_Based_Buffer_Overflow__CWE135_21_bad();
<     printLine("Finished bad()");
