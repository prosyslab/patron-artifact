2814,2817c2814,2815
< 
< 
< 
< void CWE457_Use_of_Uninitialized_Variable__struct_array_declare_no_init_12_bad()
---
> # 85 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_declare_no_init_12.c"
> static void goodB2G()
2829a2828,2832
>         ;
>     }
>     if(globalReturnsTrueOrFalse())
>     {
> 
2837a2841,2848
>         {
>             int i;
>             for(i=0; i<10; i++)
>             {
>                 printIntLine(data[i].intOne);
>                 printIntLine(data[i].intTwo);
>             }
>         }
2839c2850
<     if(globalReturnsTrueOrFalse())
---
>     else
2845a2857,2864
>                 data[i].intOne = i;
>                 data[i].intTwo = i;
>             }
>         }
>         {
>             int i;
>             for(i=0; i<10; i++)
>             {
2850a2870,2891
> }
> 
> 
> 
> 
> static void goodG2B()
> {
>     twoIntsStruct * data;
>     twoIntsStruct dataUninitArray[10];
>     data = dataUninitArray;
>     if(globalReturnsTrueOrFalse())
>     {
> 
>         {
>             int i;
>             for(i=0; i<10; i++)
>             {
>                 data[i].intOne = i;
>                 data[i].intTwo = i;
>             }
>         }
>     }
2861a2903,2918
>     }
>     if(globalReturnsTrueOrFalse())
>     {
> 
>         {
>             int i;
>             for(i=0; i<10; i++)
>             {
>                 printIntLine(data[i].intOne);
>                 printIntLine(data[i].intTwo);
>             }
>         }
>     }
>     else
>     {
> 
2871a2929,2934
> 
> void CWE457_Use_of_Uninitialized_Variable__struct_array_declare_no_init_12_good()
> {
>     goodB2G();
>     goodG2B();
> }
2881a2945,2947
>     printLine("Calling good()...");
>     CWE457_Use_of_Uninitialized_Variable__struct_array_declare_no_init_12_good();
>     printLine("Finished good()");
2887,2889d2952
<     printLine("Calling bad()...");
<     CWE457_Use_of_Uninitialized_Variable__struct_array_declare_no_init_12_bad();
<     printLine("Finished bad()");
