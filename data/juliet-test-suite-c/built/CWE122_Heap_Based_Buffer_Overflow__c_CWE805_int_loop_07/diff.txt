2819a2820,2847
> # 57 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_07.c"
> static void goodG2B1()
> {
>     int * data;
>     data = 
> # 60 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_07.c" 3 4
>           ((void *)0)
> # 60 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_07.c"
>               ;
>     if(staticFive!=5)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         data = (int *)malloc(100*sizeof(int));
>         if (data == 
> # 70 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_07.c" 3 4
>                    ((void *)0)
> # 70 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_07.c"
>                        ) {exit(-1);}
>     }
>     {
>         int source[100] = {0};
>         {
>             size_t i;
2820a2849,2857
>             for (i = 0; i < 100; i++)
>             {
>                 data[i] = source[i];
>             }
>             printIntLine(data[0]);
>             free(data);
>         }
>     }
> }
2823c2860
< void CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_07_bad()
---
> static void goodG2B2()
2827c2864
< # 30 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_07.c" 3 4
---
> # 91 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_07.c" 3 4
2829c2866
< # 30 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_07.c"
---
> # 91 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_07.c"
2834c2871
<         data = (int *)malloc(50*sizeof(int));
---
>         data = (int *)malloc(100*sizeof(int));
2836c2873
< # 35 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_07.c" 3 4
---
> # 96 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_07.c" 3 4
2838c2875
< # 35 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_07.c"
---
> # 96 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_07.c"
2854a2892,2897
> 
> void CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_07_good()
> {
>     goodG2B1();
>     goodG2B2();
> }
2864a2908,2910
>     printLine("Calling good()...");
>     CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_07_good();
>     printLine("Finished good()");
2870,2872d2915
<     printLine("Calling bad()...");
<     CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_07_bad();
<     printLine("Finished bad()");
