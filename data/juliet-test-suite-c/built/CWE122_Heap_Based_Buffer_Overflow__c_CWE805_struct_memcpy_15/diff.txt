2813a2814,2849
> # 60 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_15.c"
> static void goodG2B1()
> {
>     twoIntsStruct * data;
>     data = 
> # 63 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_15.c" 3 4
>           ((void *)0)
> # 63 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_15.c"
>               ;
>     switch(5)
>     {
>     case 6:
> 
>         printLine("Benign, fixed string");
>         break;
>     default:
> 
>         data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));
>         if (data == 
> # 73 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_15.c" 3 4
>                    ((void *)0)
> # 73 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_15.c"
>                        ) {exit(-1);}
>         break;
>     }
>     {
>         twoIntsStruct source[100];
>         {
>             size_t i;
> 
>             for (i = 0; i < 100; i++)
>             {
>                 source[i].intOne = 0;
>                 source[i].intTwo = 0;
>             }
>         }
2814a2851,2855
>         memcpy(data, source, 100*sizeof(twoIntsStruct));
>         printStructLine(&data[0]);
>         free(data);
>     }
> }
2817c2858
< void CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_15_bad()
---
> static void goodG2B2()
2821c2862
< # 24 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_15.c" 3 4
---
> # 98 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_15.c" 3 4
2823c2864
< # 24 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_15.c"
---
> # 98 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_15.c"
2829c2870
<         data = (twoIntsStruct *)malloc(50*sizeof(twoIntsStruct));
---
>         data = (twoIntsStruct *)malloc(100*sizeof(twoIntsStruct));
2831c2872
< # 30 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_15.c" 3 4
---
> # 104 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_15.c" 3 4
2833c2874
< # 30 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_15.c"
---
> # 104 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_15.c"
2857a2899,2904
> 
> void CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_15_good()
> {
>     goodG2B1();
>     goodG2B2();
> }
2867a2915,2917
>     printLine("Calling good()...");
>     CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_15_good();
>     printLine("Finished good()");
2873,2875d2922
<     printLine("Calling bad()...");
<     CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_15_bad();
<     printLine("Finished bad()");
