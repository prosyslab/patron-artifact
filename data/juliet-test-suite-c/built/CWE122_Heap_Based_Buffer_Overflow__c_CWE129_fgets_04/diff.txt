2821a2822,2842
> # 87 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c"
> static void goodB2G1()
> {
>     int data;
> 
>     data = -1;
>     if(STATIC_CONST_TRUE)
>     {
>         {
>             char inputBuffer[(3 * sizeof(data) + 2)] = "";
> 
>             if (fgets(inputBuffer, (3 * sizeof(data) + 2), 
> # 97 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c" 3 4
>                                                    stdin
> # 97 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c"
>                                                         ) != 
> # 97 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c" 3 4
>                                                              ((void *)0)
> # 97 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c"
>                                                                  )
>             {
2822a2844,2853
>                 data = atoi(inputBuffer);
>             }
>             else
>             {
>                 printLine("fgets() failed.");
>             }
>         }
>     }
>     if(STATIC_CONST_FALSE)
>     {
2823a2855,2866
>         printLine("Benign, fixed string");
>     }
>     else
>     {
>         {
>             int i;
>             int * buffer = (int *)malloc(10 * sizeof(int));
>             if (buffer == 
> # 118 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c" 3 4
>                          ((void *)0)
> # 118 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c"
>                              ) {exit(-1);}
2825c2868,2892
< void CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04_bad()
---
>             for (i = 0; i < 10; i++)
>             {
>                 buffer[i] = 0;
>             }
> 
>             if (data >= 0 && data < (10))
>             {
>                 buffer[data] = 1;
> 
>                 for(i = 0; i < 10; i++)
>                 {
>                     printIntLine(buffer[i]);
>                 }
>             }
>             else
>             {
>                 printLine("ERROR: Array index is out-of-bounds");
>             }
>             free(buffer);
>         }
>     }
> }
> 
> 
> static void goodB2G2()
2836c2903
< # 40 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c" 3 4
---
> # 154 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c" 3 4
2838c2905
< # 40 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c"
---
> # 154 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c"
2840c2907
< # 40 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c" 3 4
---
> # 154 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c" 3 4
2842c2909
< # 40 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c"
---
> # 154 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c"
2860c2927,2978
< # 56 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c" 3 4
---
> # 170 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c" 3 4
>                          ((void *)0)
> # 170 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c"
>                              ) {exit(-1);}
> 
>             for (i = 0; i < 10; i++)
>             {
>                 buffer[i] = 0;
>             }
> 
>             if (data >= 0 && data < (10))
>             {
>                 buffer[data] = 1;
> 
>                 for(i = 0; i < 10; i++)
>                 {
>                     printIntLine(buffer[i]);
>                 }
>             }
>             else
>             {
>                 printLine("ERROR: Array index is out-of-bounds");
>             }
>             free(buffer);
>         }
>     }
> }
> 
> 
> static void goodG2B1()
> {
>     int data;
> 
>     data = -1;
>     if(STATIC_CONST_FALSE)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
> 
>         data = 7;
>     }
>     if(STATIC_CONST_TRUE)
>     {
>         {
>             int i;
>             int * buffer = (int *)malloc(10 * sizeof(int));
>             if (buffer == 
> # 217 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c" 3 4
2862c2980
< # 56 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c"
---
> # 217 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c"
2887a3006,3060
> 
> 
> static void goodG2B2()
> {
>     int data;
> 
>     data = -1;
>     if(STATIC_CONST_TRUE)
>     {
> 
> 
>         data = 7;
>     }
>     if(STATIC_CONST_TRUE)
>     {
>         {
>             int i;
>             int * buffer = (int *)malloc(10 * sizeof(int));
>             if (buffer == 
> # 260 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c" 3 4
>                          ((void *)0)
> # 260 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c"
>                              ) {exit(-1);}
> 
>             for (i = 0; i < 10; i++)
>             {
>                 buffer[i] = 0;
>             }
> 
> 
>             if (data >= 0)
>             {
>                 buffer[data] = 1;
> 
>                 for(i = 0; i < 10; i++)
>                 {
>                     printIntLine(buffer[i]);
>                 }
>             }
>             else
>             {
>                 printLine("ERROR: Array index is negative.");
>             }
>             free(buffer);
>         }
>     }
> }
> 
> void CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B1();
>     goodG2B2();
> }
2897a3071,3073
>     printLine("Calling good()...");
>     CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04_good();
>     printLine("Finished good()");
2903,2905d3078
<     printLine("Calling bad()...");
<     CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04_bad();
<     printLine("Finished bad()");
