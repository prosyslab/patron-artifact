2813a2814,2830
> # 50 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_min_sub_32.c"
> static void goodG2B()
> {
>     int data;
>     int *dataPtr1 = &data;
>     int *dataPtr2 = &data;
> 
>     data = 0;
>     {
>         int data = *dataPtr1;
> 
>         data = -2;
>         *dataPtr1 = data;
>     }
>     {
>         int data = *dataPtr2;
>         {
2814a2832,2836
>             int result = data - 1;
>             printIntLine(result);
>         }
>     }
> }
2817c2839
< void CWE191_Integer_Underflow__int_min_sub_32_bad()
---
> static void goodB2G()
2828c2850
< # 32 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_min_sub_32.c" 3 4
---
> # 84 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_min_sub_32.c" 3 4
2830c2852
< # 32 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_min_sub_32.c"
---
> # 84 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_min_sub_32.c"
2836d2857
<         {
2837a2859,2864
>         if (data > 
> # 90 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_min_sub_32.c" 3 4
>                   (-0x7fffffff - 1)
> # 90 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_min_sub_32.c"
>                          )
>         {
2840a2868,2871
>         else
>         {
>             printLine("data value is too large to perform subtraction.");
>         }
2842a2874,2879
> 
> void CWE191_Integer_Underflow__int_min_sub_32_good()
> {
>     goodG2B();
>     goodB2G();
> }
2852a2890,2892
>     printLine("Calling good()...");
>     CWE191_Integer_Underflow__int_min_sub_32_good();
>     printLine("Finished good()");
2858,2860d2897
<     printLine("Calling bad()...");
<     CWE191_Integer_Underflow__int_min_sub_32_bad();
<     printLine("Finished bad()");
