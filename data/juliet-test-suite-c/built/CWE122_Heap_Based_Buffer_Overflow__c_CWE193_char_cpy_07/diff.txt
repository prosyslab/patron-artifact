3244a3245,3270
> # 58 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_07.c"
> static void goodG2B1()
> {
>     char * data;
>     data = 
> # 61 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_07.c" 3 4
>           ((void *)0)
> # 61 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_07.c"
>               ;
>     if(staticFive!=5)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         data = (char *)malloc((10+1)*sizeof(char));
>         if (data == 
> # 71 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_07.c" 3 4
>                    ((void *)0)
> # 71 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_07.c"
>                        ) {exit(-1);}
>     }
>     {
>         char source[10+1] = "AAAAAAAAAA";
3245a3272,3276
>         strcpy(data, source);
>         printLine(data);
>         free(data);
>     }
> }
3248c3279
< void CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_07_bad()
---
> static void goodG2B2()
3252c3283
< # 37 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_07.c" 3 4
---
> # 86 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_07.c" 3 4
3254c3285
< # 37 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_07.c"
---
> # 86 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_07.c"
3259c3290
<         data = (char *)malloc(10*sizeof(char));
---
>         data = (char *)malloc((10+1)*sizeof(char));
3261c3292
< # 42 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_07.c" 3 4
---
> # 91 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_07.c" 3 4
3263c3294
< # 42 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_07.c"
---
> # 91 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_07.c"
3273a3305,3310
> 
> void CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_07_good()
> {
>     goodG2B1();
>     goodG2B2();
> }
3283a3321,3323
>     printLine("Calling good()...");
>     CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_07_good();
>     printLine("Finished good()");
3289,3291d3328
<     printLine("Calling bad()...");
<     CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_07_bad();
<     printLine("Finished bad()");
