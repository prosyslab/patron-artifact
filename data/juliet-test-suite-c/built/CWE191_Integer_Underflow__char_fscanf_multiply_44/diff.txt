2814,2817c2814,2815
< 
< 
< 
< static void badSink(char data)
---
> # 49 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_fscanf_multiply_44.c"
> static void goodG2BSink(char data)
2827c2825
< void CWE191_Integer_Underflow__char_fscanf_multiply_44_bad()
---
> static void goodG2B()
2829a2828,2829
>     void (*funcPtr) (char) = goodG2BSink;
>     data = ' ';
2831c2831,2860
<     void (*funcPtr) (char) = badSink;
---
>     data = -2;
>     funcPtr(data);
> }
> 
> 
> static void goodB2GSink(char data)
> {
>     if(data < 0)
>     {
> 
>         if (data > (
> # 75 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_fscanf_multiply_44.c" 3 4
>                    (-0x7f - 1)
> # 75 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_fscanf_multiply_44.c"
>                            /2))
>         {
>             char result = data * 2;
>             printHexCharLine(result);
>         }
>         else
>         {
>             printLine("data value is too small to perform multiplication.");
>         }
>     }
> }
> 
> static void goodB2G()
> {
>     char data;
>     void (*funcPtr) (char) = goodB2GSink;
2835c2864
< # 39 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_fscanf_multiply_44.c" 3 4
---
> # 93 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_fscanf_multiply_44.c" 3 4
2837c2866
< # 39 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_fscanf_multiply_44.c"
---
> # 93 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_fscanf_multiply_44.c"
2839d2867
< 
2841a2870,2875
> 
> void CWE191_Integer_Underflow__char_fscanf_multiply_44_good()
> {
>     goodG2B();
>     goodB2G();
> }
2851a2886,2888
>     printLine("Calling good()...");
>     CWE191_Integer_Underflow__char_fscanf_multiply_44_good();
>     printLine("Finished good()");
2857,2859d2893
<     printLine("Calling bad()...");
<     CWE191_Integer_Underflow__char_fscanf_multiply_44_bad();
<     printLine("Finished bad()");
