3731a3732
> # 49 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__int_rand_square_13.c"
3732a3734,3737
> # 49 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__int_rand_square_13.c"
> static void goodB2G1()
> {
>     int data;
3733a3739,3741
>     data = 0;
>     if(GLOBAL_CONST_FIVE==5)
>     {
3734a3743,3746
>         data = ((int)(rand() & 1 ? (((unsigned)rand()<<30) ^ ((unsigned)rand()<<15) ^ rand()) : -(((unsigned)rand()<<30) ^ ((unsigned)rand()<<15) ^ rand()) - 1));
>     }
>     if(GLOBAL_CONST_FIVE!=5)
>     {
3736,3737c3748,3770
< # 24 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__int_rand_square_13.c"
< void CWE190_Integer_Overflow__int_rand_square_13_bad()
---
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         if (data > 
> # 67 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__int_rand_square_13.c" 3 4
>                   (-0x7fffffff - 1) 
> # 67 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__int_rand_square_13.c"
>                           && abs(data) < (long)sqrt((double)0x7fffffff))
>         {
>             int result = data * data;
>             printIntLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
>     }
> }
> 
> 
> static void goodB2G2()
3748a3782,3816
> 
>         if (data > 
> # 93 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__int_rand_square_13.c" 3 4
>                   (-0x7fffffff - 1) 
> # 93 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__int_rand_square_13.c"
>                           && abs(data) < (long)sqrt((double)0x7fffffff))
>         {
>             int result = data * data;
>             printIntLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
>     }
> }
> 
> 
> static void goodG2B1()
> {
>     int data;
> 
>     data = 0;
>     if(GLOBAL_CONST_FIVE!=5)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         data = 2;
>     }
>     if(GLOBAL_CONST_FIVE==5)
>     {
3755a3824,3852
> 
> 
> static void goodG2B2()
> {
>     int data;
> 
>     data = 0;
>     if(GLOBAL_CONST_FIVE==5)
>     {
> 
>         data = 2;
>     }
>     if(GLOBAL_CONST_FIVE==5)
>     {
>         {
> 
>             int result = data * data;
>             printIntLine(result);
>         }
>     }
> }
> 
> void CWE190_Integer_Overflow__int_rand_square_13_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B1();
>     goodG2B2();
> }
3765a3863,3865
>     printLine("Calling good()...");
>     CWE190_Integer_Overflow__int_rand_square_13_good();
>     printLine("Finished good()");
3771,3773d3870
<     printLine("Calling bad()...");
<     CWE190_Integer_Overflow__int_rand_square_13_bad();
<     printLine("Finished bad()");
