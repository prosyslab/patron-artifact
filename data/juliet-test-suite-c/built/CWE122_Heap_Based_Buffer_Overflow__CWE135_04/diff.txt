3247a3248,3267
> # 64 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_04.c"
> static void goodB2G1()
> {
>     void * data;
>     data = 
> # 67 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_04.c" 3 4
>           ((void *)0)
> # 67 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_04.c"
>               ;
>     if(STATIC_CONST_TRUE)
>     {
>         {
>             wchar_t * dataBadBuffer = (wchar_t *)malloc(50*sizeof(wchar_t));
>             if (dataBadBuffer == 
> # 72 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_04.c" 3 4
>                                 ((void *)0)
> # 72 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_04.c"
>                                     ) {exit(-1);}
>             wmemset(dataBadBuffer, L'A', 50-1);
>             dataBadBuffer[50-1] = L'\0';
3248a3269,3273
>             data = (void *)dataBadBuffer;
>         }
>     }
>     if(STATIC_CONST_FALSE)
>     {
3249a3275,3279
>         printLine("Benign, fixed string");
>     }
>     else
>     {
>         {
3251c3281,3296
< void CWE122_Heap_Based_Buffer_Overflow__CWE135_04_bad()
---
>             size_t dataLen = wcslen((wchar_t *)data);
>             void * dest = (void *)calloc(dataLen+1, sizeof(wchar_t));
>             if (dest == 
> # 90 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_04.c" 3 4
>                        ((void *)0)
> # 90 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_04.c"
>                            ) {exit(-1);}
>             (void)wcscpy(dest, data);
>             printWLine((wchar_t *)dest);
>             free(dest);
>         }
>     }
> }
> 
> 
> static void goodB2G2()
3255c3300
< # 33 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_04.c" 3 4
---
> # 102 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_04.c" 3 4
3257c3302
< # 33 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_04.c"
---
> # 102 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_04.c"
3264c3309
< # 38 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_04.c" 3 4
---
> # 107 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_04.c" 3 4
3266c3311
< # 38 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_04.c"
---
> # 107 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_04.c"
3278c3323
<             size_t dataLen = strlen((char *)data);
---
>             size_t dataLen = wcslen((wchar_t *)data);
3281c3326
< # 51 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_04.c" 3 4
---
> # 120 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_04.c" 3 4
3283c3328
< # 51 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_04.c"
---
> # 120 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_04.c"
3285a3331,3419
>             printWLine((wchar_t *)dest);
>             free(dest);
>         }
>     }
> }
> 
> 
> static void goodG2B1()
> {
>     void * data;
>     data = 
> # 132 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_04.c" 3 4
>           ((void *)0)
> # 132 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_04.c"
>               ;
>     if(STATIC_CONST_FALSE)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
>         {
>             char * dataGoodBuffer = (char *)malloc(50*sizeof(char));
>             if (dataGoodBuffer == 
> # 142 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_04.c" 3 4
>                                  ((void *)0)
> # 142 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_04.c"
>                                      ) {exit(-1);}
>             memset(dataGoodBuffer, 'A', 50-1);
>             dataGoodBuffer[50-1] = '\0';
> 
>             data = (void *)dataGoodBuffer;
>         }
>     }
>     if(STATIC_CONST_TRUE)
>     {
>         {
> 
>             size_t dataLen = strlen((char *)data);
>             void * dest = (void *)calloc(dataLen+1, 1);
>             if (dest == 
> # 155 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_04.c" 3 4
>                        ((void *)0)
> # 155 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_04.c"
>                            ) {exit(-1);}
>             (void)strcpy(dest, data);
>             printLine((char *)dest);
>             free(dest);
>         }
>     }
> }
> 
> 
> static void goodG2B2()
> {
>     void * data;
>     data = 
> # 167 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_04.c" 3 4
>           ((void *)0)
> # 167 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_04.c"
>               ;
>     if(STATIC_CONST_TRUE)
>     {
>         {
>             char * dataGoodBuffer = (char *)malloc(50*sizeof(char));
>             if (dataGoodBuffer == 
> # 172 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_04.c" 3 4
>                                  ((void *)0)
> # 172 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_04.c"
>                                      ) {exit(-1);}
>             memset(dataGoodBuffer, 'A', 50-1);
>             dataGoodBuffer[50-1] = '\0';
> 
>             data = (void *)dataGoodBuffer;
>         }
>     }
>     if(STATIC_CONST_TRUE)
>     {
>         {
> 
>             size_t dataLen = strlen((char *)data);
>             void * dest = (void *)calloc(dataLen+1, 1);
>             if (dest == 
> # 185 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_04.c" 3 4
>                        ((void *)0)
> # 185 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_04.c"
>                            ) {exit(-1);}
>             (void)strcpy(dest, data);
3290a3425,3432
> 
> void CWE122_Heap_Based_Buffer_Overflow__CWE135_04_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B1();
>     goodG2B2();
> }
3300a3443,3445
>     printLine("Calling good()...");
>     CWE122_Heap_Based_Buffer_Overflow__CWE135_04_good();
>     printLine("Finished good()");
3306,3308d3450
<     printLine("Calling bad()...");
<     CWE122_Heap_Based_Buffer_Overflow__CWE135_04_bad();
<     printLine("Finished bad()");
