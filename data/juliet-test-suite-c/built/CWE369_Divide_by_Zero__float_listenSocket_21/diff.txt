5816c5816
< # 47 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c"
---
> # 144 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c"
5818,5819c5818,5821
< # 47 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c"
< static int badStatic = 0;
---
> # 144 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c"
> static int goodB2G1Static = 0;
> static int goodB2G2Static = 0;
> static int goodG2BStatic = 0;
5821c5823,5824
< static void badSink(float data)
---
> 
> static void goodB2G1Sink(float data)
5823c5826
<     if(badStatic)
---
>     if(goodB2G1Static)
5824a5828,5839
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         if(fabs(data) > 0.000001)
>         {
>             int result = (int)(100.0 / data);
>             printIntLine(result);
>         }
>         else
5825a5841,5866
>             printLine("This would result in a divide by zero");
>         }
>     }
> }
> 
> static void goodB2G1()
> {
>     float data;
> 
>     data = 0.0F;
>     {
> 
> 
> 
> 
>         int recvResult;
>         struct sockaddr_in service;
>         int listenSocket = -1;
>         int acceptSocket = -1;
>         char inputBuffer[20];
>         do
>         {
> 
> 
> 
> 
5826a5868,5959
> 
> 
>             listenSocket = socket(
> # 195 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c" 3 4
>                                  2
> # 195 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c"
>                                         , 
> # 195 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c" 3 4
>                                           SOCK_STREAM
> # 195 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c"
>                                                      , 
> # 195 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c" 3 4
>                                                        IPPROTO_TCP
> # 195 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c"
>                                                                   );
>             if (listenSocket == -1)
>             {
>                 break;
>             }
>             memset(&service, 0, sizeof(service));
>             service.sin_family = 
> # 201 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c" 3 4
>                                 2
> # 201 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c"
>                                        ;
>             service.sin_addr.s_addr = 
> # 202 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c" 3 4
>                                      ((in_addr_t) 0x00000000)
> # 202 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c"
>                                                ;
>             service.sin_port = htons(27015);
>             if (bind(listenSocket, (struct sockaddr*)&service, sizeof(service)) == -1)
>             {
>                 break;
>             }
>             if (listen(listenSocket, 5) == -1)
>             {
>                 break;
>             }
>             acceptSocket = accept(listenSocket, 
> # 212 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c" 3 4
>                                                ((void *)0)
> # 212 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c"
>                                                    , 
> # 212 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c" 3 4
>                                                      ((void *)0)
> # 212 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c"
>                                                          );
>             if (acceptSocket == -1)
>             {
>                 break;
>             }
> 
> 
>             recvResult = recv(acceptSocket, inputBuffer, 20 - 1, 0);
>             if (recvResult == -1 || recvResult == 0)
>             {
>                 break;
>             }
> 
>             inputBuffer[recvResult] = '\0';
> 
>             data = (float)atof(inputBuffer);
>         }
>         while (0);
>         if (listenSocket != -1)
>         {
>             close(listenSocket);
>         }
>         if (acceptSocket != -1)
>         {
>             close(acceptSocket);
>         }
> 
> 
> 
> 
> 
> 
>     }
>     goodB2G1Static = 0;
>     goodB2G1Sink(data);
> }
> 
> 
> static void goodB2G2Sink(float data)
> {
>     if(goodB2G2Static)
>     {
> 
>         if(fabs(data) > 0.000001)
>         {
5829a5963,5966
>         else
>         {
>             printLine("This would result in a divide by zero");
>         }
5833c5970
< void CWE369_Divide_by_Zero__float_listenSocket_21_bad()
---
> static void goodB2G2()
5858c5995
< # 85 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c" 3 4
---
> # 291 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c" 3 4
5860c5997
< # 85 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c"
---
> # 291 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c"
5862c5999
< # 85 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c" 3 4
---
> # 291 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c" 3 4
5864c6001
< # 85 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c"
---
> # 291 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c"
5866c6003
< # 85 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c" 3 4
---
> # 291 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c" 3 4
5868c6005
< # 85 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c"
---
> # 291 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c"
5876c6013
< # 91 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c" 3 4
---
> # 297 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c" 3 4
5878c6015
< # 91 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c"
---
> # 297 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c"
5881c6018
< # 92 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c" 3 4
---
> # 298 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c" 3 4
5883c6020
< # 92 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c"
---
> # 298 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c"
5895c6032
< # 102 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c" 3 4
---
> # 308 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c" 3 4
5897c6034
< # 102 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c"
---
> # 308 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c"
5899c6036
< # 102 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c" 3 4
---
> # 308 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c" 3 4
5901c6038
< # 102 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c"
---
> # 308 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c"
5935,5936c6072,6104
<     badStatic = 1;
<     badSink(data);
---
>     goodB2G2Static = 1;
>     goodB2G2Sink(data);
> }
> 
> 
> static void goodG2BSink(float data)
> {
>     if(goodG2BStatic)
>     {
>         {
> 
>             int result = (int)(100.0 / data);
>             printIntLine(result);
>         }
>     }
> }
> 
> static void goodG2B()
> {
>     float data;
> 
>     data = 0.0F;
> 
>     data = 2.0F;
>     goodG2BStatic = 1;
>     goodG2BSink(data);
> }
> 
> void CWE369_Divide_by_Zero__float_listenSocket_21_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B();
5947a6116,6118
>     printLine("Calling good()...");
>     CWE369_Divide_by_Zero__float_listenSocket_21_good();
>     printLine("Finished good()");
5953,5955d6123
<     printLine("Calling bad()...");
<     CWE369_Divide_by_Zero__float_listenSocket_21_bad();
<     printLine("Finished bad()");
