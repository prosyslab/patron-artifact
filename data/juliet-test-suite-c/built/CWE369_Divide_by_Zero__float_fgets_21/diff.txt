3731a3732
> # 68 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_21.c"
3732a3734,3737
> # 68 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_21.c"
> static int goodB2G1Static = 0;
> static int goodB2G2Static = 0;
> static int goodG2BStatic = 0;
3734a3740,3743
> static void goodB2G1Sink(float data)
> {
>     if(goodB2G1Static)
>     {
3735a3745,3748
>         printLine("Benign, fixed string");
>     }
>     else
>     {
3736a3750,3760
>         if(fabs(data) > 0.000001)
>         {
>             int result = (int)(100.0 / data);
>             printIntLine(result);
>         }
>         else
>         {
>             printLine("This would result in a divide by zero");
>         }
>     }
> }
3737a3762,3764
> static void goodB2G1()
> {
>     float data;
3739,3740c3766,3768
< # 27 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_21.c"
< static int badStatic = 0;
---
>     data = 0.0F;
>     {
>         char inputBuffer[20];
3742c3770,3793
< static void badSink(float data)
---
>         if (fgets(inputBuffer, 20, 
> # 103 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_21.c" 3 4
>                                                stdin
> # 103 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_21.c"
>                                                     ) != 
> # 103 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_21.c" 3 4
>                                                          ((void *)0)
> # 103 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_21.c"
>                                                              )
>         {
> 
>             data = (float)atof(inputBuffer);
>         }
>         else
>         {
>             printLine("fgets() failed.");
>         }
>     }
>     goodB2G1Static = 0;
>     goodB2G1Sink(data);
> }
> 
> 
> static void goodB2G2Sink(float data)
3744c3795
<     if(badStatic)
---
>     if(goodB2G2Static)
3746d3796
<         {
3747a3798,3799
>         if(fabs(data) > 0.000001)
>         {
3750a3803,3806
>         else
>         {
>             printLine("This would result in a divide by zero");
>         }
3754c3810
< void CWE369_Divide_by_Zero__float_fgets_21_bad()
---
> static void goodB2G2()
3763c3819
< # 49 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_21.c" 3 4
---
> # 143 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_21.c" 3 4
3765c3821
< # 49 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_21.c"
---
> # 143 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_21.c"
3767c3823
< # 49 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_21.c" 3 4
---
> # 143 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_21.c" 3 4
3769c3825
< # 49 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_21.c"
---
> # 143 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_21.c"
3780,3781c3836,3868
<     badStatic = 1;
<     badSink(data);
---
>     goodB2G2Static = 1;
>     goodB2G2Sink(data);
> }
> 
> 
> static void goodG2BSink(float data)
> {
>     if(goodG2BStatic)
>     {
>         {
> 
>             int result = (int)(100.0 / data);
>             printIntLine(result);
>         }
>     }
> }
> 
> static void goodG2B()
> {
>     float data;
> 
>     data = 0.0F;
> 
>     data = 2.0F;
>     goodG2BStatic = 1;
>     goodG2BSink(data);
> }
> 
> void CWE369_Divide_by_Zero__float_fgets_21_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B();
3792a3880,3882
>     printLine("Calling good()...");
>     CWE369_Divide_by_Zero__float_fgets_21_good();
>     printLine("Finished good()");
3798,3800d3887
<     printLine("Calling bad()...");
<     CWE369_Divide_by_Zero__float_fgets_21_bad();
<     printLine("Finished bad()");
