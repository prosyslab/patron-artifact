3772a3773
> # 43 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int64_t_max_square_64b.c"
3773a3775,3777
> # 43 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int64_t_max_square_64b.c"
> void CWE190_Integer_Overflow__int64_t_max_square_64b_goodG2BSink(void * dataVoidPtr)
> {
3774a3779
>     int64_t * dataPtr = (int64_t *)dataVoidPtr;
3775a3781,3782
>     int64_t data = (*dataPtr);
>     {
3777,3778c3784,3790
< # 25 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int64_t_max_square_64b.c"
< void CWE190_Integer_Overflow__int64_t_max_square_64b_badSink(void * dataVoidPtr)
---
>         int64_t result = data * data;
>         printLongLongLine(result);
>     }
> }
> 
> 
> void CWE190_Integer_Overflow__int64_t_max_square_64b_goodB2GSink(void * dataVoidPtr)
3784d3795
<     {
3785a3797,3798
>     if (imaxabs((intmax_t)data) <= sqrtl(0x7fffffffffffffffLL))
>     {
3787a3801,3804
>     }
>     else
>     {
>         printLine("data value is too large to perform arithmetic safely.");
