3738a3739,3745
> # 53 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_max_square_06.c"
> static void goodB2G1()
> {
>     unsigned int data;
>     data = 0;
>     if(STATIC_CONST_FIVE==5)
>     {
3739a3747,3754
>         data = 
> # 60 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_max_square_06.c" 3 4
>               (0x7fffffff * 2U + 1U)
> # 60 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_max_square_06.c"
>                       ;
>     }
>     if(STATIC_CONST_FIVE!=5)
>     {
3740a3756,3759
>         printLine("Benign, fixed string");
>     }
>     else
>     {
3742c3761,3778
< void CWE190_Integer_Overflow__unsigned_int_max_square_06_bad()
---
>         if (abs((long)data) < (long)sqrt((double)
> # 70 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_max_square_06.c" 3 4
>                                                 (0x7fffffff * 2U + 1U)
> # 70 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_max_square_06.c"
>                                                         ))
>         {
>             unsigned int result = data * data;
>             printUnsignedLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
>     }
> }
> 
> 
> static void goodB2G2()
3750c3786
< # 36 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_max_square_06.c" 3 4
---
> # 90 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_max_square_06.c" 3 4
3752c3788
< # 36 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_max_square_06.c"
---
> # 90 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_max_square_06.c"
3756a3793,3846
> 
>         if (abs((long)data) < (long)sqrt((double)
> # 95 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_max_square_06.c" 3 4
>                                                 (0x7fffffff * 2U + 1U)
> # 95 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_max_square_06.c"
>                                                         ))
>         {
>             unsigned int result = data * data;
>             printUnsignedLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
>     }
> }
> 
> 
> static void goodG2B1()
> {
>     unsigned int data;
>     data = 0;
>     if(STATIC_CONST_FIVE!=5)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         data = 2;
>     }
>     if(STATIC_CONST_FIVE==5)
>     {
>         {
> 
>             unsigned int result = data * data;
>             printUnsignedLine(result);
>         }
>     }
> }
> 
> 
> static void goodG2B2()
> {
>     unsigned int data;
>     data = 0;
>     if(STATIC_CONST_FIVE==5)
>     {
> 
>         data = 2;
>     }
>     if(STATIC_CONST_FIVE==5)
>     {
3763a3854,3861
> 
> void CWE190_Integer_Overflow__unsigned_int_max_square_06_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B1();
>     goodG2B2();
> }
3773a3872,3874
>     printLine("Calling good()...");
>     CWE190_Integer_Overflow__unsigned_int_max_square_06_good();
>     printLine("Finished good()");
3779,3781d3879
<     printLine("Calling bad()...");
<     CWE190_Integer_Overflow__unsigned_int_max_square_06_bad();
<     printLine("Finished bad()");
