2813a2814,2816
> # 47 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_multiply_42.c"
> static char goodG2BSource(char data)
> {
2814a2818,2820
>     data = 2;
>     return data;
> }
2815a2822,2828
> static void goodG2B()
> {
>     char data;
>     data = ' ';
>     data = goodG2BSource(data);
>     if(data > 0)
>     {
2817c2830,2836
< static char badSource(char data)
---
>         char result = data * 2;
>         printHexCharLine(result);
>     }
> }
> 
> 
> static char goodB2GSource(char data)
2824c2843
< void CWE190_Integer_Overflow__char_rand_multiply_42_bad()
---
> static void goodB2G()
2828c2847
<     data = badSource(data);
---
>     data = goodB2GSource(data);
2832,2833c2851,2859
<         char result = data * 2;
<         printHexCharLine(result);
---
>         if (data < (0x7f/2))
>         {
>             char result = data * 2;
>             printHexCharLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
2835a2862,2867
> 
> void CWE190_Integer_Overflow__char_rand_multiply_42_good()
> {
>     goodB2G();
>     goodG2B();
> }
2845a2878,2880
>     printLine("Calling good()...");
>     CWE190_Integer_Overflow__char_rand_multiply_42_good();
>     printLine("Finished good()");
2851,2853d2885
<     printLine("Calling bad()...");
<     CWE190_Integer_Overflow__char_rand_multiply_42_bad();
<     printLine("Finished bad()");
