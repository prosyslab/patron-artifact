2866a2867,2873
> # 53 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int64_t_fscanf_preinc_07.c"
> static void goodB2G1()
> {
>     int64_t data;
>     data = 0LL;
>     if(staticFive==5)
>     {
2867a2875,2886
>         fscanf (
> # 60 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int64_t_fscanf_preinc_07.c" 3 4
>                stdin
> # 60 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int64_t_fscanf_preinc_07.c"
>                     , "%" 
> # 60 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int64_t_fscanf_preinc_07.c" 3 4
>                           "l" "d"
> # 60 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int64_t_fscanf_preinc_07.c"
>                                 , &data);
>     }
>     if(staticFive!=5)
>     {
2868a2888,2891
>         printLine("Benign, fixed string");
>     }
>     else
>     {
2870c2893,2907
< void CWE190_Integer_Overflow__int64_t_fscanf_preinc_07_bad()
---
>         if (data < 0x7fffffffffffffffLL)
>         {
>             ++data;
>             int64_t result = data;
>             printLongLongLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
>     }
> }
> 
> 
> static void goodB2G2()
2878c2915
< # 35 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int64_t_fscanf_preinc_07.c" 3 4
---
> # 91 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int64_t_fscanf_preinc_07.c" 3 4
2880c2917
< # 35 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int64_t_fscanf_preinc_07.c"
---
> # 91 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int64_t_fscanf_preinc_07.c"
2882c2919
< # 35 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int64_t_fscanf_preinc_07.c" 3 4
---
> # 91 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int64_t_fscanf_preinc_07.c" 3 4
2884c2921
< # 35 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int64_t_fscanf_preinc_07.c"
---
> # 91 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int64_t_fscanf_preinc_07.c"
2888a2926,2956
> 
>         if (data < 0x7fffffffffffffffLL)
>         {
>             ++data;
>             int64_t result = data;
>             printLongLongLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
>     }
> }
> 
> 
> static void goodG2B1()
> {
>     int64_t data;
>     data = 0LL;
>     if(staticFive!=5)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         data = 2;
>     }
>     if(staticFive==5)
>     {
2896a2965,2993
> 
> 
> static void goodG2B2()
> {
>     int64_t data;
>     data = 0LL;
>     if(staticFive==5)
>     {
> 
>         data = 2;
>     }
>     if(staticFive==5)
>     {
>         {
> 
>             ++data;
>             int64_t result = data;
>             printLongLongLine(result);
>         }
>     }
> }
> 
> void CWE190_Integer_Overflow__int64_t_fscanf_preinc_07_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B1();
>     goodG2B2();
> }
2906a3004,3006
>     printLine("Calling good()...");
>     CWE190_Integer_Overflow__int64_t_fscanf_preinc_07_good();
>     printLine("Finished good()");
2912,2914d3011
<     printLine("Calling bad()...");
<     CWE190_Integer_Overflow__int64_t_fscanf_preinc_07_bad();
<     printLine("Finished bad()");
