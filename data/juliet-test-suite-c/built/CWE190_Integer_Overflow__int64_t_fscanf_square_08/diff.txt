3787a3788,3794
> # 62 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int64_t_fscanf_square_08.c"
> static void goodB2G1()
> {
>     int64_t data;
>     data = 0LL;
>     if(staticReturnsTrue())
>     {
3788a3796,3824
>         fscanf (
> # 69 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int64_t_fscanf_square_08.c" 3 4
>                stdin
> # 69 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int64_t_fscanf_square_08.c"
>                     , "%" 
> # 69 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int64_t_fscanf_square_08.c" 3 4
>                           "l" "d"
> # 69 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int64_t_fscanf_square_08.c"
>                                 , &data);
>     }
>     if(staticReturnsFalse())
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         if (imaxabs((intmax_t)data) <= sqrtl(0x7fffffffffffffffLL))
>         {
>             int64_t result = data * data;
>             printLongLongLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
>     }
> }
3791c3827
< void CWE190_Integer_Overflow__int64_t_fscanf_square_08_bad()
---
> static void goodB2G2()
3799c3835
< # 45 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int64_t_fscanf_square_08.c" 3 4
---
> # 99 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int64_t_fscanf_square_08.c" 3 4
3801c3837
< # 45 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int64_t_fscanf_square_08.c"
---
> # 99 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int64_t_fscanf_square_08.c"
3803c3839
< # 45 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int64_t_fscanf_square_08.c" 3 4
---
> # 99 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int64_t_fscanf_square_08.c" 3 4
3805c3841
< # 45 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int64_t_fscanf_square_08.c"
---
> # 99 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int64_t_fscanf_square_08.c"
3809a3846,3875
> 
>         if (imaxabs((intmax_t)data) <= sqrtl(0x7fffffffffffffffLL))
>         {
>             int64_t result = data * data;
>             printLongLongLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
>     }
> }
> 
> 
> static void goodG2B1()
> {
>     int64_t data;
>     data = 0LL;
>     if(staticReturnsFalse())
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         data = 2;
>     }
>     if(staticReturnsTrue())
>     {
3816a3883,3910
> 
> 
> static void goodG2B2()
> {
>     int64_t data;
>     data = 0LL;
>     if(staticReturnsTrue())
>     {
> 
>         data = 2;
>     }
>     if(staticReturnsTrue())
>     {
>         {
> 
>             int64_t result = data * data;
>             printLongLongLine(result);
>         }
>     }
> }
> 
> void CWE190_Integer_Overflow__int64_t_fscanf_square_08_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B1();
>     goodG2B2();
> }
3826a3921,3923
>     printLine("Calling good()...");
>     CWE190_Integer_Overflow__int64_t_fscanf_square_08_good();
>     printLine("Finished good()");
3832,3834d3928
<     printLine("Calling bad()...");
<     CWE190_Integer_Overflow__int64_t_fscanf_square_08_bad();
<     printLine("Finished bad()");
