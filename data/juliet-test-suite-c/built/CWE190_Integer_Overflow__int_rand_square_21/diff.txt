3731a3732
> # 55 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__int_rand_square_21.c"
3732a3734,3737
> # 55 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__int_rand_square_21.c"
> static int goodB2G1Static = 0;
> static int goodB2G2Static = 0;
> static int goodG2BStatic = 0;
3734a3740,3743
> static void goodB2G1Sink(int data)
> {
>     if(goodB2G1Static)
>     {
3735a3745,3748
>         printLine("Benign, fixed string");
>     }
>     else
>     {
3737,3738c3750,3764
< # 25 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__int_rand_square_21.c"
< static int badStatic = 0;
---
>         if (data > 
> # 70 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__int_rand_square_21.c" 3 4
>                   (-0x7fffffff - 1) 
> # 70 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__int_rand_square_21.c"
>                           && abs(data) < (long)sqrt((double)0x7fffffff))
>         {
>             int result = data * data;
>             printIntLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
>     }
> }
3740c3766
< static void badSink(int data)
---
> static void goodB2G1()
3742c3768,3780
<     if(badStatic)
---
>     int data;
> 
>     data = 0;
> 
>     data = ((int)(rand() & 1 ? (((unsigned)rand()<<30) ^ ((unsigned)rand()<<15) ^ rand()) : -(((unsigned)rand()<<30) ^ ((unsigned)rand()<<15) ^ rand()) - 1));
>     goodB2G1Static = 0;
>     goodB2G1Sink(data);
> }
> 
> 
> static void goodB2G2Sink(int data)
> {
>     if(goodB2G2Static)
3744d3781
<         {
3745a3783,3788
>         if (data > 
> # 99 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__int_rand_square_21.c" 3 4
>                   (-0x7fffffff - 1) 
> # 99 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__int_rand_square_21.c"
>                           && abs(data) < (long)sqrt((double)0x7fffffff))
>         {
3748a3792,3795
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
3752c3799
< void CWE190_Integer_Overflow__int_rand_square_21_bad()
---
> static void goodB2G2()
3759,3760c3806,3838
<     badStatic = 1;
<     badSink(data);
---
>     goodB2G2Static = 1;
>     goodB2G2Sink(data);
> }
> 
> 
> static void goodG2BSink(int data)
> {
>     if(goodG2BStatic)
>     {
>         {
> 
>             int result = data * data;
>             printIntLine(result);
>         }
>     }
> }
> 
> static void goodG2B()
> {
>     int data;
> 
>     data = 0;
> 
>     data = 2;
>     goodG2BStatic = 1;
>     goodG2BSink(data);
> }
> 
> void CWE190_Integer_Overflow__int_rand_square_21_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B();
3771a3850,3852
>     printLine("Calling good()...");
>     CWE190_Integer_Overflow__int_rand_square_21_good();
>     printLine("Finished good()");
3777,3779d3857
<     printLine("Calling bad()...");
<     CWE190_Integer_Overflow__int_rand_square_21_bad();
<     printLine("Finished bad()");
