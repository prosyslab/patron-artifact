5816c5816
< # 46 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_15.c"
---
> # 137 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_15.c"
5818,5819c5818,5819
< # 46 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_15.c"
< void CWE369_Divide_by_Zero__float_connect_socket_15_bad()
---
> # 137 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_15.c"
> static void goodB2G1()
5846c5846
< # 72 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_15.c" 3 4
---
> # 163 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_15.c" 3 4
5848c5848
< # 72 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_15.c"
---
> # 163 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_15.c"
5850c5850
< # 72 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_15.c" 3 4
---
> # 163 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_15.c" 3 4
5852c5852
< # 72 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_15.c"
---
> # 163 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_15.c"
5854c5854
< # 72 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_15.c" 3 4
---
> # 163 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_15.c" 3 4
5856c5856
< # 72 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_15.c"
---
> # 163 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_15.c"
5864c5864
< # 78 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_15.c" 3 4
---
> # 169 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_15.c" 3 4
5866c5866
< # 78 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_15.c"
---
> # 169 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_15.c"
5904a5905,6050
>     switch(8)
>     {
>     case 7:
> 
>         printLine("Benign, fixed string");
>         break;
>     default:
> 
>         if(fabs(data) > 0.000001)
>         {
>             int result = (int)(100.0 / data);
>             printIntLine(result);
>         }
>         else
>         {
>             printLine("This would result in a divide by zero");
>         }
>         break;
>     }
> }
> 
> 
> static void goodB2G2()
> {
>     float data;
> 
>     data = 0.0F;
>     switch(6)
>     {
>     case 6:
>     {
> 
> 
> 
> 
>         int recvResult;
>         struct sockaddr_in service;
>         int connectSocket = -1;
>         char inputBuffer[20];
>         do
>         {
> 
> 
> 
> 
> 
> 
> 
>             connectSocket = socket(
> # 255 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_15.c" 3 4
>                                   2
> # 255 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_15.c"
>                                          , 
> # 255 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_15.c" 3 4
>                                            SOCK_STREAM
> # 255 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_15.c"
>                                                       , 
> # 255 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_15.c" 3 4
>                                                         IPPROTO_TCP
> # 255 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_15.c"
>                                                                    );
>             if (connectSocket == -1)
>             {
>                 break;
>             }
>             memset(&service, 0, sizeof(service));
>             service.sin_family = 
> # 261 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_15.c" 3 4
>                                 2
> # 261 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_15.c"
>                                        ;
>             service.sin_addr.s_addr = inet_addr("127.0.0.1");
>             service.sin_port = htons(27015);
>             if (connect(connectSocket, (struct sockaddr*)&service, sizeof(service)) == -1)
>             {
>                 break;
>             }
> 
> 
> 
>             recvResult = recv(connectSocket, inputBuffer, 20 - 1, 0);
>             if (recvResult == -1 || recvResult == 0)
>             {
>                 break;
>             }
> 
>             inputBuffer[recvResult] = '\0';
> 
>             data = (float)atof(inputBuffer);
>         }
>         while (0);
>         if (connectSocket != -1)
>         {
>             close(connectSocket);
>         }
> 
> 
> 
> 
> 
> 
>     }
>     break;
>     default:
> 
>         printLine("Benign, fixed string");
>         break;
>     }
>     switch(7)
>     {
>     case 7:
> 
>         if(fabs(data) > 0.000001)
>         {
>             int result = (int)(100.0 / data);
>             printIntLine(result);
>         }
>         else
>         {
>             printLine("This would result in a divide by zero");
>         }
>         break;
>     default:
> 
>         printLine("Benign, fixed string");
>         break;
>     }
> }
> 
> 
> static void goodG2B1()
> {
>     float data;
> 
>     data = 0.0F;
>     switch(5)
>     {
>     case 6:
> 
>         printLine("Benign, fixed string");
>         break;
>     default:
> 
>         data = 2.0F;
>         break;
>     }
5919a6066,6106
> 
> 
> static void goodG2B2()
> {
>     float data;
> 
>     data = 0.0F;
>     switch(6)
>     {
>     case 6:
> 
>         data = 2.0F;
>         break;
>     default:
> 
>         printLine("Benign, fixed string");
>         break;
>     }
>     switch(7)
>     {
>     case 7:
>     {
> 
>         int result = (int)(100.0 / data);
>         printIntLine(result);
>     }
>     break;
>     default:
> 
>         printLine("Benign, fixed string");
>         break;
>     }
> }
> 
> void CWE369_Divide_by_Zero__float_connect_socket_15_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B1();
>     goodG2B2();
> }
5929a6117,6119
>     printLine("Calling good()...");
>     CWE369_Divide_by_Zero__float_connect_socket_15_good();
>     printLine("Finished good()");
5935,5937d6124
<     printLine("Calling bad()...");
<     CWE369_Divide_by_Zero__float_connect_socket_15_bad();
<     printLine("Finished bad()");
