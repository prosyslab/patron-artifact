2813a2814,2820
> # 46 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_fscanf_add_09.c"
> static void goodB2G1()
> {
>     char data;
>     data = ' ';
>     if(GLOBAL_CONST_TRUE)
>     {
2814a2822,2829
>         fscanf (
> # 53 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_fscanf_add_09.c" 3 4
>                stdin
> # 53 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_fscanf_add_09.c"
>                     , "%c", &data);
>     }
>     if(GLOBAL_CONST_FALSE)
>     {
2815a2831,2834
>         printLine("Benign, fixed string");
>     }
>     else
>     {
2817c2836,2849
< void CWE190_Integer_Overflow__char_fscanf_add_09_bad()
---
>         if (data < 0x7f)
>         {
>             char result = data + 1;
>             printHexCharLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
>     }
> }
> 
> 
> static void goodB2G2()
2825c2857
< # 29 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_fscanf_add_09.c" 3 4
---
> # 83 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_fscanf_add_09.c" 3 4
2827c2859
< # 29 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_fscanf_add_09.c"
---
> # 83 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_fscanf_add_09.c"
2831a2864,2913
> 
>         if (data < 0x7f)
>         {
>             char result = data + 1;
>             printHexCharLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
>     }
> }
> 
> 
> static void goodG2B1()
> {
>     char data;
>     data = ' ';
>     if(GLOBAL_CONST_FALSE)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         data = 2;
>     }
>     if(GLOBAL_CONST_TRUE)
>     {
>         {
> 
>             char result = data + 1;
>             printHexCharLine(result);
>         }
>     }
> }
> 
> 
> static void goodG2B2()
> {
>     char data;
>     data = ' ';
>     if(GLOBAL_CONST_TRUE)
>     {
> 
>         data = 2;
>     }
>     if(GLOBAL_CONST_TRUE)
>     {
2838a2921,2928
> 
> void CWE190_Integer_Overflow__char_fscanf_add_09_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B1();
>     goodG2B2();
> }
2848a2939,2941
>     printLine("Calling good()...");
>     CWE190_Integer_Overflow__char_fscanf_add_09_good();
>     printLine("Finished good()");
2854,2856d2946
<     printLine("Calling bad()...");
<     CWE190_Integer_Overflow__char_fscanf_add_09_bad();
<     printLine("Finished bad()");
