2819a2820,2836
> # 52 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_max_add_04.c"
> static void goodB2G1()
> {
>     short data;
>     data = 0;
>     if(STATIC_CONST_TRUE)
>     {
> 
>         data = 0x7fff;
>     }
>     if(STATIC_CONST_FALSE)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
2820a2838,2848
>         if (data < 0x7fff)
>         {
>             short result = data + 1;
>             printIntLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
>     }
> }
2823c2851
< void CWE190_Integer_Overflow__short_max_add_04_bad()
---
> static void goodB2G2()
2833a2862,2891
> 
>         if (data < 0x7fff)
>         {
>             short result = data + 1;
>             printIntLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
>     }
> }
> 
> 
> static void goodG2B1()
> {
>     short data;
>     data = 0;
>     if(STATIC_CONST_FALSE)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         data = 2;
>     }
>     if(STATIC_CONST_TRUE)
>     {
2840a2899,2926
> 
> 
> static void goodG2B2()
> {
>     short data;
>     data = 0;
>     if(STATIC_CONST_TRUE)
>     {
> 
>         data = 2;
>     }
>     if(STATIC_CONST_TRUE)
>     {
>         {
> 
>             short result = data + 1;
>             printIntLine(result);
>         }
>     }
> }
> 
> void CWE190_Integer_Overflow__short_max_add_04_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B1();
>     goodG2B2();
> }
2850a2937,2939
>     printLine("Calling good()...");
>     CWE190_Integer_Overflow__short_max_add_04_good();
>     printLine("Finished good()");
2856,2858d2944
<     printLine("Calling bad()...");
<     CWE190_Integer_Overflow__short_max_add_04_bad();
<     printLine("Finished bad()");
