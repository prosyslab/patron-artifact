2813a2814,2830
> # 60 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fscanf_multiply_15.c"
> static void goodB2G1()
> {
>     int data;
> 
>     data = 0;
>     switch(6)
>     {
>     case 6:
> 
>         fscanf(
> # 69 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fscanf_multiply_15.c" 3 4
>               stdin
> # 69 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fscanf_multiply_15.c"
>                    , "%d", &data);
>         break;
>     default:
2814a2832,2837
>         printLine("Benign, fixed string");
>         break;
>     }
>     switch(8)
>     {
>     case 7:
2815a2839,2843
>         printLine("Benign, fixed string");
>         break;
>     default:
>         if(data < 0)
>         {
2817c2845,2864
< void CWE191_Integer_Underflow__int_fscanf_multiply_15_bad()
---
>             if (data > (
> # 86 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fscanf_multiply_15.c" 3 4
>                        (-0x7fffffff - 1)
> # 86 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fscanf_multiply_15.c"
>                               /2))
>             {
>                 int result = data * 2;
>                 printIntLine(result);
>             }
>             else
>             {
>                 printLine("data value is too small to perform multiplication.");
>             }
>         }
>         break;
>     }
> }
> 
> 
> static void goodB2G2()
2827c2874
< # 31 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fscanf_multiply_15.c" 3 4
---
> # 110 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fscanf_multiply_15.c" 3 4
2829c2876
< # 31 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fscanf_multiply_15.c"
---
> # 110 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fscanf_multiply_15.c"
2842a2890,2968
>             if (data > (
> # 123 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fscanf_multiply_15.c" 3 4
>                        (-0x7fffffff - 1)
> # 123 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fscanf_multiply_15.c"
>                               /2))
>             {
>                 int result = data * 2;
>                 printIntLine(result);
>             }
>             else
>             {
>                 printLine("data value is too small to perform multiplication.");
>             }
>         }
>         break;
>     default:
> 
>         printLine("Benign, fixed string");
>         break;
>     }
> }
> 
> 
> static void goodG2B1()
> {
>     int data;
> 
>     data = 0;
>     switch(5)
>     {
>     case 6:
> 
>         printLine("Benign, fixed string");
>         break;
>     default:
> 
>         data = -2;
>         break;
>     }
>     switch(7)
>     {
>     case 7:
>         if(data < 0)
>         {
> 
>             int result = data * 2;
>             printIntLine(result);
>         }
>         break;
>     default:
> 
>         printLine("Benign, fixed string");
>         break;
>     }
> }
> 
> 
> static void goodG2B2()
> {
>     int data;
> 
>     data = 0;
>     switch(6)
>     {
>     case 6:
> 
>         data = -2;
>         break;
>     default:
> 
>         printLine("Benign, fixed string");
>         break;
>     }
>     switch(7)
>     {
>     case 7:
>         if(data < 0)
>         {
> 
2852a2979,2986
> 
> void CWE191_Integer_Underflow__int_fscanf_multiply_15_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B1();
>     goodG2B2();
> }
2862a2997,2999
>     printLine("Calling good()...");
>     CWE191_Integer_Underflow__int_fscanf_multiply_15_good();
>     printLine("Finished good()");
2868,2870d3004
<     printLine("Calling bad()...");
<     CWE191_Integer_Underflow__int_fscanf_multiply_15_bad();
<     printLine("Finished bad()");
