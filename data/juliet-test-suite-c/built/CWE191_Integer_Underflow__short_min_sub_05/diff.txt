2819a2820,2826
> # 52 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_min_sub_05.c"
> static void goodB2G1()
> {
>     short data;
>     data = 0;
>     if(staticTrue)
>     {
2820a2828,2835
>         data = 
> # 59 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_min_sub_05.c" 3 4
>               (-0x7fff - 1)
> # 59 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_min_sub_05.c"
>                       ;
>     }
>     if(staticFalse)
>     {
2821a2837,2840
>         printLine("Benign, fixed string");
>     }
>     else
>     {
2823c2842,2859
< void CWE191_Integer_Underflow__short_min_sub_05_bad()
---
>         if (data > 
> # 69 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_min_sub_05.c" 3 4
>                   (-0x7fff - 1)
> # 69 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_min_sub_05.c"
>                           )
>         {
>             short result = data - 1;
>             printIntLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform subtraction.");
>         }
>     }
> }
> 
> 
> static void goodB2G2()
2831c2867
< # 35 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_min_sub_05.c" 3 4
---
> # 89 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_min_sub_05.c" 3 4
2833c2869
< # 35 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_min_sub_05.c"
---
> # 89 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_min_sub_05.c"
2837a2874,2927
> 
>         if (data > 
> # 94 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_min_sub_05.c" 3 4
>                   (-0x7fff - 1)
> # 94 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_min_sub_05.c"
>                           )
>         {
>             short result = data - 1;
>             printIntLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform subtraction.");
>         }
>     }
> }
> 
> 
> static void goodG2B1()
> {
>     short data;
>     data = 0;
>     if(staticFalse)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         data = -2;
>     }
>     if(staticTrue)
>     {
>         {
> 
>             short result = data - 1;
>             printIntLine(result);
>         }
>     }
> }
> 
> 
> static void goodG2B2()
> {
>     short data;
>     data = 0;
>     if(staticTrue)
>     {
> 
>         data = -2;
>     }
>     if(staticTrue)
>     {
2844a2935,2942
> 
> void CWE191_Integer_Underflow__short_min_sub_05_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B1();
>     goodG2B2();
> }
2854a2953,2955
>     printLine("Calling good()...");
>     CWE191_Integer_Underflow__short_min_sub_05_good();
>     printLine("Finished good()");
2860,2862d2960
<     printLine("Calling bad()...");
<     CWE191_Integer_Underflow__short_min_sub_05_bad();
<     printLine("Finished bad()");
