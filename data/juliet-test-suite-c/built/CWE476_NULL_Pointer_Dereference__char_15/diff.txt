3239a3240
> # 57 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__char_15.c"
3240a3242,3256
> # 57 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__char_15.c"
> static void goodB2G1()
> {
>     char * data;
>     switch(6)
>     {
>     case 6:
> 
>         data = 
> # 64 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__char_15.c" 3 4
>               ((void *)0)
> # 64 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__char_15.c"
>                   ;
>         break;
>     default:
3241a3258,3263
>         printLine("Benign, fixed string");
>         break;
>     }
>     switch(8)
>     {
>     case 7:
3242a3265,3267
>         printLine("Benign, fixed string");
>         break;
>     default:
3244,3245c3269,3287
< # 24 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__char_15.c"
< void CWE476_NULL_Pointer_Dereference__char_15_bad()
---
>         if (data != 
> # 79 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__char_15.c" 3 4
>                    ((void *)0)
> # 79 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__char_15.c"
>                        )
>         {
> 
>             printHexCharLine(data[0]);
>         }
>         else
>         {
>             printLine("data is NULL");
>         }
>         break;
>     }
> }
> 
> 
> static void goodB2G2()
3253c3295
< # 31 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__char_15.c" 3 4
---
> # 100 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__char_15.c" 3 4
3255c3297
< # 31 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__char_15.c"
---
> # 100 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__char_15.c"
3266a3309,3377
>         if (data != 
> # 111 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__char_15.c" 3 4
>                    ((void *)0)
> # 111 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__char_15.c"
>                        )
>         {
> 
>             printHexCharLine(data[0]);
>         }
>         else
>         {
>             printLine("data is NULL");
>         }
>         break;
>     default:
> 
>         printLine("Benign, fixed string");
>         break;
>     }
> }
> 
> 
> static void goodG2B1()
> {
>     char * data;
>     switch(5)
>     {
>     case 6:
> 
>         printLine("Benign, fixed string");
>         break;
>     default:
> 
>         data = "Good";
>         break;
>     }
>     switch(7)
>     {
>     case 7:
> 
> 
>         printHexCharLine(data[0]);
>         break;
>     default:
> 
>         printLine("Benign, fixed string");
>         break;
>     }
> }
> 
> 
> static void goodG2B2()
> {
>     char * data;
>     switch(6)
>     {
>     case 6:
> 
>         data = "Good";
>         break;
>     default:
> 
>         printLine("Benign, fixed string");
>         break;
>     }
>     switch(7)
>     {
>     case 7:
> 
3275a3387,3394
> 
> void CWE476_NULL_Pointer_Dereference__char_15_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B1();
>     goodG2B2();
> }
3285a3405,3407
>     printLine("Calling good()...");
>     CWE476_NULL_Pointer_Dereference__char_15_good();
>     printLine("Finished good()");
3291,3293d3412
<     printLine("Calling bad()...");
<     CWE476_NULL_Pointer_Dereference__char_15_bad();
<     printLine("Finished bad()");
