5815a5816
> # 64 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_square_64b.c"
5816a5818,5820
> # 64 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_square_64b.c"
> void CWE190_Integer_Overflow__int_connect_socket_square_64b_goodG2BSink(void * dataVoidPtr)
> {
5817a5822
>     int * dataPtr = (int *)dataVoidPtr;
5818a5824,5825
>     int data = (*dataPtr);
>     {
5820,5821c5827,5833
< # 46 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_square_64b.c"
< void CWE190_Integer_Overflow__int_connect_socket_square_64b_badSink(void * dataVoidPtr)
---
>         int result = data * data;
>         printIntLine(result);
>     }
> }
> 
> 
> void CWE190_Integer_Overflow__int_connect_socket_square_64b_goodB2GSink(void * dataVoidPtr)
5827d5838
<     {
5828a5840,5845
>     if (data > 
> # 85 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_square_64b.c" 3 4
>               (-0x7fffffff - 1) 
> # 85 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_square_64b.c"
>                       && abs(data) < (long)sqrt((double)0x7fffffff))
>     {
5830a5848,5851
>     }
>     else
>     {
>         printLine("data value is too large to perform arithmetic safely.");
