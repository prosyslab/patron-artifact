2827a2828,2831
> # 58 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_08.c"
> static void goodG2B1()
> {
>     int64_t * data;
2828a2833,2839
>     data = 
> # 62 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_08.c" 3 4
>           ((void *)0)
> # 62 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_08.c"
>               ;
>     if(staticReturnsFalse())
>     {
2829a2841,2844
>         printLine("Benign, fixed string");
>     }
>     else
>     {
2831c2846,2860
< void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_08_bad()
---
>         data = (int64_t *)malloc(sizeof(*data));
>         if (data == 
> # 72 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_08.c" 3 4
>                    ((void *)0)
> # 72 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_08.c"
>                        ) {exit(-1);}
>         *data = 2147483643LL;
>     }
> 
>     printLongLongLine(*data);
>     free(data);
> }
> 
> 
> static void goodG2B2()
2836c2865
< # 39 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_08.c" 3 4
---
> # 85 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_08.c" 3 4
2838c2867
< # 39 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_08.c"
---
> # 85 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_08.c"
2843,2844c2872
< 
<         data = (int64_t *)malloc(sizeof(data));
---
>         data = (int64_t *)malloc(sizeof(*data));
2846c2874
< # 45 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_08.c" 3 4
---
> # 90 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_08.c" 3 4
2848c2876
< # 45 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_08.c"
---
> # 90 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_08.c"
2855a2884,2889
> 
> void CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_08_good()
> {
>     goodG2B1();
>     goodG2B2();
> }
2865a2900,2902
>     printLine("Calling good()...");
>     CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_08_good();
>     printLine("Finished good()");
2871,2873d2907
<     printLine("Calling bad()...");
<     CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_08_bad();
<     printLine("Finished bad()");
