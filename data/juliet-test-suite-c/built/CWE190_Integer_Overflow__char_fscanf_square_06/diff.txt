3738a3739,3745
> # 53 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_fscanf_square_06.c"
> static void goodB2G1()
> {
>     char data;
>     data = ' ';
>     if(STATIC_CONST_FIVE==5)
>     {
3739a3747,3754
>         fscanf (
> # 60 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_fscanf_square_06.c" 3 4
>                stdin
> # 60 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_fscanf_square_06.c"
>                     , "%c", &data);
>     }
>     if(STATIC_CONST_FIVE!=5)
>     {
3740a3756,3759
>         printLine("Benign, fixed string");
>     }
>     else
>     {
3742c3761,3774
< void CWE190_Integer_Overflow__char_fscanf_square_06_bad()
---
>         if (abs((long)data) <= (long)sqrt((double)0x7f))
>         {
>             char result = data * data;
>             printHexCharLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
>     }
> }
> 
> 
> static void goodB2G2()
3750c3782
< # 36 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_fscanf_square_06.c" 3 4
---
> # 90 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_fscanf_square_06.c" 3 4
3752c3784
< # 36 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_fscanf_square_06.c"
---
> # 90 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_fscanf_square_06.c"
3756a3789,3838
> 
>         if (abs((long)data) <= (long)sqrt((double)0x7f))
>         {
>             char result = data * data;
>             printHexCharLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
>     }
> }
> 
> 
> static void goodG2B1()
> {
>     char data;
>     data = ' ';
>     if(STATIC_CONST_FIVE!=5)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         data = 2;
>     }
>     if(STATIC_CONST_FIVE==5)
>     {
>         {
> 
>             char result = data * data;
>             printHexCharLine(result);
>         }
>     }
> }
> 
> 
> static void goodG2B2()
> {
>     char data;
>     data = ' ';
>     if(STATIC_CONST_FIVE==5)
>     {
> 
>         data = 2;
>     }
>     if(STATIC_CONST_FIVE==5)
>     {
3763a3846,3853
> 
> void CWE190_Integer_Overflow__char_fscanf_square_06_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B1();
>     goodG2B2();
> }
3773a3864,3866
>     printLine("Calling good()...");
>     CWE190_Integer_Overflow__char_fscanf_square_06_good();
>     printLine("Finished good()");
3779,3781d3871
<     printLine("Calling bad()...");
<     CWE190_Integer_Overflow__char_fscanf_square_06_bad();
<     printLine("Finished bad()");
