3241c3241
< # 30 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03.c"
---
> # 80 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03.c"
3243,3244c3243,3244
< # 30 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03.c"
< void CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03_bad()
---
> # 80 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03.c"
> static void goodB2G1()
3255c3255
< # 40 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03.c" 3 4
---
> # 90 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03.c" 3 4
3257c3257
< # 40 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03.c"
---
> # 90 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03.c"
3259c3259
< # 40 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03.c" 3 4
---
> # 90 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03.c" 3 4
3261c3261
< # 40 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03.c"
---
> # 90 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03.c"
3266c3266
< # 43 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03.c" 3 4
---
> # 93 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03.c" 3 4
3268c3268
< # 43 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03.c"
---
> # 93 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03.c"
3276a3277,3387
>     if(5!=5)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
>         {
>             char * myString;
> 
> 
> 
>             if (data > strlen("hello") && data < 100)
>             {
>                 myString = (char *)malloc(data*sizeof(char));
>                 if (myString == 
> # 116 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03.c" 3 4
>                                ((void *)0)
> # 116 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03.c"
>                                    ) {exit(-1);}
> 
>                 strcpy(myString, "hello");
>                 printLine(myString);
>                 free(myString);
>             }
>             else
>             {
>                 printLine("Input is less than the length of the source string or too large");
>             }
>         }
>     }
> }
> 
> 
> static void goodB2G2()
> {
>     size_t data;
> 
>     data = 0;
>     if(5==5)
>     {
>         {
>             char inputBuffer[(3 * sizeof(data) + 2)] = "";
> 
>             if (fgets(inputBuffer, (3 * sizeof(data) + 2), 
> # 141 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03.c" 3 4
>                                                    stdin
> # 141 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03.c"
>                                                         ) != 
> # 141 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03.c" 3 4
>                                                              ((void *)0)
> # 141 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03.c"
>                                                                  )
>             {
> 
>                 data = strtoul(inputBuffer, 
> # 144 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03.c" 3 4
>                                            ((void *)0)
> # 144 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03.c"
>                                                , 0);
>             }
>             else
>             {
>                 printLine("fgets() failed.");
>             }
>         }
>     }
>     if(5==5)
>     {
>         {
>             char * myString;
> 
> 
> 
>             if (data > strlen("hello") && data < 100)
>             {
>                 myString = (char *)malloc(data*sizeof(char));
>                 if (myString == 
> # 162 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03.c" 3 4
>                                ((void *)0)
> # 162 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03.c"
>                                    ) {exit(-1);}
> 
>                 strcpy(myString, "hello");
>                 printLine(myString);
>                 free(myString);
>             }
>             else
>             {
>                 printLine("Input is less than the length of the source string or too large");
>             }
>         }
>     }
> }
> 
> 
> static void goodG2B1()
> {
>     size_t data;
> 
>     data = 0;
>     if(5!=5)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         data = 20;
>     }
3288c3399
< # 61 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03.c" 3 4
---
> # 202 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03.c" 3 4
3290c3401
< # 61 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03.c"
---
> # 202 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03.c"
3303a3415,3461
> 
> 
> static void goodG2B2()
> {
>     size_t data;
> 
>     data = 0;
>     if(5==5)
>     {
> 
>         data = 20;
>     }
>     if(5==5)
>     {
>         {
>             char * myString;
> 
> 
> 
>             if (data > strlen("hello"))
>             {
>                 myString = (char *)malloc(data*sizeof(char));
>                 if (myString == 
> # 237 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03.c" 3 4
>                                ((void *)0)
> # 237 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03.c"
>                                    ) {exit(-1);}
> 
>                 strcpy(myString, "hello");
>                 printLine(myString);
>                 free(myString);
>             }
>             else
>             {
>                 printLine("Input is less than the length of the source string");
>             }
>         }
>     }
> }
> 
> void CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B1();
>     goodG2B2();
> }
3313a3472,3474
>     printLine("Calling good()...");
>     CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03_good();
>     printLine("Finished good()");
3319,3321d3479
<     printLine("Calling bad()...");
<     CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_03_bad();
<     printLine("Finished bad()");
