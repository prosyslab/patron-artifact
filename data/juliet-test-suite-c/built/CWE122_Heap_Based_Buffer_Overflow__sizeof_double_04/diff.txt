2820a2821,2824
> # 51 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_04.c"
> static void goodG2B1()
> {
>     double * data;
2821a2826,2832
>     data = 
> # 55 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_04.c" 3 4
>           ((void *)0)
> # 55 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_04.c"
>               ;
>     if(STATIC_CONST_FALSE)
>     {
2822a2834,2837
>         printLine("Benign, fixed string");
>     }
>     else
>     {
2824c2839,2853
< void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_04_bad()
---
>         data = (double *)malloc(sizeof(*data));
>         if (data == 
> # 65 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_04.c" 3 4
>                    ((void *)0)
> # 65 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_04.c"
>                        ) {exit(-1);}
>         *data = 1.7E300;
>     }
> 
>     printDoubleLine(*data);
>     free(data);
> }
> 
> 
> static void goodG2B2()
2829c2858
< # 32 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_04.c" 3 4
---
> # 78 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_04.c" 3 4
2831c2860
< # 32 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_04.c"
---
> # 78 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_04.c"
2836,2837c2865
< 
<         data = (double *)malloc(sizeof(data));
---
>         data = (double *)malloc(sizeof(*data));
2839c2867
< # 38 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_04.c" 3 4
---
> # 83 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_04.c" 3 4
2841c2869
< # 38 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_04.c"
---
> # 83 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_04.c"
2848a2877,2882
> 
> void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_04_good()
> {
>     goodG2B1();
>     goodG2B2();
> }
2858a2893,2895
>     printLine("Calling good()...");
>     CWE122_Heap_Based_Buffer_Overflow__sizeof_double_04_good();
>     printLine("Finished good()");
2864,2866d2900
<     printLine("Calling bad()...");
<     CWE122_Heap_Based_Buffer_Overflow__sizeof_double_04_bad();
<     printLine("Finished bad()");
