2813a2814,2817
> # 53 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_rand_multiply_21.c"
> static int goodB2G1Static = 0;
> static int goodB2G2Static = 0;
> static int goodG2BStatic = 0;
2815a2820,2858
> static void goodB2G1Sink(unsigned int data)
> {
>     if(goodB2G1Static)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
>         if(data > 0)
>         {
> 
>             if (data < (
> # 70 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_rand_multiply_21.c" 3 4
>                        (0x7fffffff * 2U + 1U)
> # 70 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_rand_multiply_21.c"
>                                /2))
>             {
>                 unsigned int result = data * 2;
>                 printUnsignedLine(result);
>             }
>             else
>             {
>                 printLine("data value is too large to perform arithmetic safely.");
>             }
>         }
>     }
> }
> 
> static void goodB2G1()
> {
>     unsigned int data;
>     data = 0;
> 
>     data = (unsigned int)((int)(rand() & 1 ? (((unsigned)rand()<<30) ^ ((unsigned)rand()<<15) ^ rand()) : -(((unsigned)rand()<<30) ^ ((unsigned)rand()<<15) ^ rand()) - 1));
>     goodB2G1Static = 0;
>     goodB2G1Sink(data);
> }
> 
2816a2860,2865
> static void goodB2G2Sink(unsigned int data)
> {
>     if(goodB2G2Static)
>     {
>         if(data > 0)
>         {
2818c2867,2882
< static int badStatic = 0;
---
>             if (data < (
> # 101 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_rand_multiply_21.c" 3 4
>                        (0x7fffffff * 2U + 1U)
> # 101 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__unsigned_int_rand_multiply_21.c"
>                                /2))
>             {
>                 unsigned int result = data * 2;
>                 printUnsignedLine(result);
>             }
>             else
>             {
>                 printLine("data value is too large to perform arithmetic safely.");
>             }
>         }
>     }
> }
2820c2884
< static void badSink(unsigned int data)
---
> static void goodB2G2()
2822c2886,2897
<     if(badStatic)
---
>     unsigned int data;
>     data = 0;
> 
>     data = (unsigned int)((int)(rand() & 1 ? (((unsigned)rand()<<30) ^ ((unsigned)rand()<<15) ^ rand()) : -(((unsigned)rand()<<30) ^ ((unsigned)rand()<<15) ^ rand()) - 1));
>     goodB2G2Static = 1;
>     goodB2G2Sink(data);
> }
> 
> 
> static void goodG2BSink(unsigned int data)
> {
>     if(goodG2BStatic)
2833c2908
< void CWE190_Integer_Overflow__unsigned_int_rand_multiply_21_bad()
---
> static void goodG2B()
2838,2840c2913,2922
<     data = (unsigned int)((int)(rand() & 1 ? (((unsigned)rand()<<30) ^ ((unsigned)rand()<<15) ^ rand()) : -(((unsigned)rand()<<30) ^ ((unsigned)rand()<<15) ^ rand()) - 1));
<     badStatic = 1;
<     badSink(data);
---
>     data = 2;
>     goodG2BStatic = 1;
>     goodG2BSink(data);
> }
> 
> void CWE190_Integer_Overflow__unsigned_int_rand_multiply_21_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B();
2851a2934,2936
>     printLine("Calling good()...");
>     CWE190_Integer_Overflow__unsigned_int_rand_multiply_21_good();
>     printLine("Finished good()");
2857,2859d2941
<     printLine("Calling bad()...");
<     CWE190_Integer_Overflow__unsigned_int_rand_multiply_21_bad();
<     printLine("Finished bad()");
