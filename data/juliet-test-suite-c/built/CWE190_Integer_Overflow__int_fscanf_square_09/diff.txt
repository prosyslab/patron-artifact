3731a3732
> # 49 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fscanf_square_09.c"
3732a3734,3737
> # 49 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fscanf_square_09.c"
> static void goodB2G1()
> {
>     int data;
3733a3739,3771
>     data = 0;
>     if(GLOBAL_CONST_TRUE)
>     {
> 
>         fscanf(
> # 57 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fscanf_square_09.c" 3 4
>               stdin
> # 57 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fscanf_square_09.c"
>                    , "%d", &data);
>     }
>     if(GLOBAL_CONST_FALSE)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         if (data > 
> # 67 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fscanf_square_09.c" 3 4
>                   (-0x7fffffff - 1) 
> # 67 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fscanf_square_09.c"
>                           && abs(data) < (long)sqrt((double)0x7fffffff))
>         {
>             int result = data * data;
>             printIntLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
>     }
> }
3736,3737c3774
< # 24 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fscanf_square_09.c"
< void CWE190_Integer_Overflow__int_fscanf_square_09_bad()
---
> static void goodB2G2()
3746c3783
< # 32 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fscanf_square_09.c" 3 4
---
> # 88 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fscanf_square_09.c" 3 4
3748c3785
< # 32 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fscanf_square_09.c"
---
> # 88 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fscanf_square_09.c"
3752a3790,3845
> 
>         if (data > 
> # 93 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fscanf_square_09.c" 3 4
>                   (-0x7fffffff - 1) 
> # 93 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fscanf_square_09.c"
>                           && abs(data) < (long)sqrt((double)0x7fffffff))
>         {
>             int result = data * data;
>             printIntLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
>     }
> }
> 
> 
> static void goodG2B1()
> {
>     int data;
> 
>     data = 0;
>     if(GLOBAL_CONST_FALSE)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         data = 2;
>     }
>     if(GLOBAL_CONST_TRUE)
>     {
>         {
> 
>             int result = data * data;
>             printIntLine(result);
>         }
>     }
> }
> 
> 
> static void goodG2B2()
> {
>     int data;
> 
>     data = 0;
>     if(GLOBAL_CONST_TRUE)
>     {
> 
>         data = 2;
>     }
>     if(GLOBAL_CONST_TRUE)
>     {
3759a3853,3860
> 
> void CWE190_Integer_Overflow__int_fscanf_square_09_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B1();
>     goodG2B2();
> }
3769a3871,3873
>     printLine("Calling good()...");
>     CWE190_Integer_Overflow__int_fscanf_square_09_good();
>     printLine("Finished good()");
3775,3777d3878
<     printLine("Calling bad()...");
<     CWE190_Integer_Overflow__int_fscanf_square_09_bad();
<     printLine("Finished bad()");
