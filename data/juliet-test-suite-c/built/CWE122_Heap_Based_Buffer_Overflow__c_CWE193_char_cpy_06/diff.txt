3250a3251,3276
> # 56 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_06.c"
> static void goodG2B1()
> {
>     char * data;
>     data = 
> # 59 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_06.c" 3 4
>           ((void *)0)
> # 59 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_06.c"
>               ;
>     if(STATIC_CONST_FIVE!=5)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         data = (char *)malloc((10+1)*sizeof(char));
>         if (data == 
> # 69 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_06.c" 3 4
>                    ((void *)0)
> # 69 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_06.c"
>                        ) {exit(-1);}
>     }
>     {
>         char source[10+1] = "AAAAAAAAAA";
3251a3278,3282
>         strcpy(data, source);
>         printLine(data);
>         free(data);
>     }
> }
3254c3285
< void CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_06_bad()
---
> static void goodG2B2()
3258c3289
< # 35 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_06.c" 3 4
---
> # 84 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_06.c" 3 4
3260c3291
< # 35 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_06.c"
---
> # 84 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_06.c"
3265c3296
<         data = (char *)malloc(10*sizeof(char));
---
>         data = (char *)malloc((10+1)*sizeof(char));
3267c3298
< # 40 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_06.c" 3 4
---
> # 89 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_06.c" 3 4
3269c3300
< # 40 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_06.c"
---
> # 89 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_06.c"
3279a3311,3316
> 
> void CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_06_good()
> {
>     goodG2B1();
>     goodG2B2();
> }
3289a3327,3329
>     printLine("Calling good()...");
>     CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_06_good();
>     printLine("Finished good()");
3295,3297d3334
<     printLine("Calling bad()...");
<     CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_06_bad();
<     printLine("Finished bad()");
