3731a3732
> # 49 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fscanf_09.c"
3732a3734,3737
> # 49 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fscanf_09.c"
> static void goodB2G1()
> {
>     float data;
3733a3739,3767
>     data = 0.0F;
>     if(GLOBAL_CONST_TRUE)
>     {
> 
>         fscanf (
> # 57 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fscanf_09.c" 3 4
>                stdin
> # 57 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fscanf_09.c"
>                     , "%f", &data);
>     }
>     if(GLOBAL_CONST_FALSE)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         if(fabs(data) > 0.000001)
>         {
>             int result = (int)(100.0 / data);
>             printIntLine(result);
>         }
>         else
>         {
>             printLine("This would result in a divide by zero");
>         }
>     }
> }
3736,3737c3770
< # 24 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fscanf_09.c"
< void CWE369_Divide_by_Zero__float_fscanf_09_bad()
---
> static void goodB2G2()
3746c3779
< # 32 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fscanf_09.c" 3 4
---
> # 88 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fscanf_09.c" 3 4
3748c3781
< # 32 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fscanf_09.c"
---
> # 88 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fscanf_09.c"
3752a3786,3837
> 
>         if(fabs(data) > 0.000001)
>         {
>             int result = (int)(100.0 / data);
>             printIntLine(result);
>         }
>         else
>         {
>             printLine("This would result in a divide by zero");
>         }
>     }
> }
> 
> 
> static void goodG2B1()
> {
>     float data;
> 
>     data = 0.0F;
>     if(GLOBAL_CONST_FALSE)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         data = 2.0F;
>     }
>     if(GLOBAL_CONST_TRUE)
>     {
>         {
> 
>             int result = (int)(100.0 / data);
>             printIntLine(result);
>         }
>     }
> }
> 
> 
> static void goodG2B2()
> {
>     float data;
> 
>     data = 0.0F;
>     if(GLOBAL_CONST_TRUE)
>     {
> 
>         data = 2.0F;
>     }
>     if(GLOBAL_CONST_TRUE)
>     {
3759a3845,3852
> 
> void CWE369_Divide_by_Zero__float_fscanf_09_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B1();
>     goodG2B2();
> }
3769a3863,3865
>     printLine("Calling good()...");
>     CWE369_Divide_by_Zero__float_fscanf_09_good();
>     printLine("Finished good()");
3775,3777d3870
<     printLine("Calling bad()...");
<     CWE369_Divide_by_Zero__float_fscanf_09_bad();
<     printLine("Finished bad()");
