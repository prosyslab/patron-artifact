2821a2822,2825
> # 63 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_divide_05.c"
> static void goodB2G1()
> {
>     int data;
2822a2827,2831
>     data = -1;
>     if(staticTrue)
>     {
>         {
>             char inputBuffer[(3 * sizeof(data) + 2)] = "";
2823a2833,2842
>             if (fgets(inputBuffer, (3 * sizeof(data) + 2), 
> # 73 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_divide_05.c" 3 4
>                                                    stdin
> # 73 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_divide_05.c"
>                                                         ) != 
> # 73 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_divide_05.c" 3 4
>                                                              ((void *)0)
> # 73 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_divide_05.c"
>                                                                  )
>             {
2825c2844,2872
< void CWE369_Divide_by_Zero__int_fgets_divide_05_bad()
---
>                 data = atoi(inputBuffer);
>             }
>             else
>             {
>                 printLine("fgets() failed.");
>             }
>         }
>     }
>     if(staticFalse)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         if( data != 0 )
>         {
>             printIntLine(100 / data);
>         }
>         else
>         {
>             printLine("This would result in a divide by zero");
>         }
>     }
> }
> 
> 
> static void goodB2G2()
2836c2883
< # 40 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_divide_05.c" 3 4
---
> # 114 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_divide_05.c" 3 4
2838c2885
< # 40 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_divide_05.c"
---
> # 114 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_divide_05.c"
2840c2887
< # 40 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_divide_05.c" 3 4
---
> # 114 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_divide_05.c" 3 4
2842c2889
< # 40 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_divide_05.c"
---
> # 114 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_divide_05.c"
2856a2904,2933
>         if( data != 0 )
>         {
>             printIntLine(100 / data);
>         }
>         else
>         {
>             printLine("This would result in a divide by zero");
>         }
>     }
> }
> 
> 
> static void goodG2B1()
> {
>     int data;
> 
>     data = -1;
>     if(staticFalse)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         data = 7;
>     }
>     if(staticTrue)
>     {
> 
2859a2937,2962
> 
> 
> static void goodG2B2()
> {
>     int data;
> 
>     data = -1;
>     if(staticTrue)
>     {
> 
>         data = 7;
>     }
>     if(staticTrue)
>     {
> 
>         printIntLine(100 / data);
>     }
> }
> 
> void CWE369_Divide_by_Zero__int_fgets_divide_05_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B1();
>     goodG2B2();
> }
2869a2973,2975
>     printLine("Calling good()...");
>     CWE369_Divide_by_Zero__int_fgets_divide_05_good();
>     printLine("Finished good()");
2875,2877d2980
<     printLine("Calling bad()...");
<     CWE369_Divide_by_Zero__int_fgets_divide_05_bad();
<     printLine("Finished bad()");
