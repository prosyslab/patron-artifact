2813a2814,2825
> # 55 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.c"
> static void goodG2B()
> {
>     int data;
> 
>     data = -1;
> 
> 
>     data = 7;
>     {
>         int i;
>         int buffer[10] = { 0 };
2815a2828,2830
>         if (data >= 0)
>         {
>             buffer[data] = 1;
2817c2832,2845
< void CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01_bad()
---
>             for(i = 0; i < 10; i++)
>             {
>                 printIntLine(buffer[i]);
>             }
>         }
>         else
>         {
>             printLine("ERROR: Array index is negative.");
>         }
>     }
> }
> 
> 
> static void goodB2G()
2824c2852
< # 28 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.c" 3 4
---
> # 91 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.c" 3 4
2826c2854
< # 28 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.c"
---
> # 91 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01.c"
2832,2833c2860
< 
<         if (data >= 0)
---
>         if (data >= 0 && data < (10))
2844c2871
<             printLine("ERROR: Array index is negative.");
---
>             printLine("ERROR: Array index is out-of-bounds");
2847a2875,2880
> 
> void CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01_good()
> {
>     goodG2B();
>     goodB2G();
> }
2857a2891,2893
>     printLine("Calling good()...");
>     CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01_good();
>     printLine("Finished good()");
2863,2865d2898
<     printLine("Calling bad()...");
<     CWE121_Stack_Based_Buffer_Overflow__CWE129_fscanf_01_bad();
<     printLine("Finished bad()");
