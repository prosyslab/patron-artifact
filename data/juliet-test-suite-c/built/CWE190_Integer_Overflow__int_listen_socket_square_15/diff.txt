5815a5816,5827
> # 150 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c"
> 
> # 150 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c"
> static void goodB2G1()
> {
>     int data;
> 
>     data = 0;
>     switch(6)
>     {
>     case 6:
>     {
5820,5821c5832,5949
< # 46 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c"
< void CWE190_Integer_Overflow__int_listen_socket_square_15_bad()
---
>         int recvResult;
>         struct sockaddr_in service;
>         int listenSocket = -1;
>         int acceptSocket = -1;
>         char inputBuffer[(3 * sizeof(data) + 2)];
>         do
>         {
> # 178 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c"
>             listenSocket = socket(
> # 178 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c" 3 4
>                                  2
> # 178 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c"
>                                         , 
> # 178 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c" 3 4
>                                           SOCK_STREAM
> # 178 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c"
>                                                      , 
> # 178 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c" 3 4
>                                                        IPPROTO_TCP
> # 178 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c"
>                                                                   );
>             if (listenSocket == -1)
>             {
>                 break;
>             }
>             memset(&service, 0, sizeof(service));
>             service.sin_family = 
> # 184 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c" 3 4
>                                 2
> # 184 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c"
>                                        ;
>             service.sin_addr.s_addr = 
> # 185 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c" 3 4
>                                      ((in_addr_t) 0x00000000)
> # 185 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c"
>                                                ;
>             service.sin_port = htons(27015);
>             if (bind(listenSocket, (struct sockaddr*)&service, sizeof(service)) == -1)
>             {
>                 break;
>             }
>             if (listen(listenSocket, 5) == -1)
>             {
>                 break;
>             }
>             acceptSocket = accept(listenSocket, 
> # 195 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c" 3 4
>                                                ((void *)0)
> # 195 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c"
>                                                    , 
> # 195 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c" 3 4
>                                                      ((void *)0)
> # 195 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c"
>                                                          );
>             if (acceptSocket == -1)
>             {
>                 break;
>             }
> 
>             recvResult = recv(acceptSocket, inputBuffer, (3 * sizeof(data) + 2) - 1, 0);
>             if (recvResult == -1 || recvResult == 0)
>             {
>                 break;
>             }
> 
>             inputBuffer[recvResult] = '\0';
> 
>             data = atoi(inputBuffer);
>         }
>         while (0);
>         if (listenSocket != -1)
>         {
>             close(listenSocket);
>         }
>         if (acceptSocket != -1)
>         {
>             close(acceptSocket);
>         }
> 
> 
> 
> 
> 
> 
>     }
>     break;
>     default:
> 
>         printLine("Benign, fixed string");
>         break;
>     }
>     switch(8)
>     {
>     case 7:
> 
>         printLine("Benign, fixed string");
>         break;
>     default:
> 
>         if (data > 
> # 241 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c" 3 4
>                   (-0x7fffffff - 1) 
> # 241 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c"
>                           && abs(data) < (long)sqrt((double)0x7fffffff))
>         {
>             int result = data * data;
>             printIntLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
>         break;
>     }
> }
> 
> 
> static void goodB2G2()
5841c5969
< # 74 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c"
---
> # 283 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c"
5843c5971
< # 74 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c" 3 4
---
> # 283 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c" 3 4
5845c5973
< # 74 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c"
---
> # 283 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c"
5847c5975
< # 74 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c" 3 4
---
> # 283 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c" 3 4
5849c5977
< # 74 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c"
---
> # 283 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c"
5851c5979
< # 74 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c" 3 4
---
> # 283 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c" 3 4
5853c5981
< # 74 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c"
---
> # 283 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c"
5861c5989
< # 80 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c" 3 4
---
> # 289 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c" 3 4
5863c5991
< # 80 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c"
---
> # 289 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c"
5866c5994
< # 81 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c" 3 4
---
> # 290 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c" 3 4
5868c5996
< # 81 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c"
---
> # 290 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c"
5880c6008
< # 91 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c" 3 4
---
> # 300 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c" 3 4
5882c6010
< # 91 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c"
---
> # 300 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c"
5884c6012
< # 91 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c" 3 4
---
> # 300 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c" 3 4
5886c6014
< # 91 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c"
---
> # 300 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c"
5927a6056,6130
> 
>         if (data > 
> # 342 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c" 3 4
>                   (-0x7fffffff - 1) 
> # 342 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_15.c"
>                           && abs(data) < (long)sqrt((double)0x7fffffff))
>         {
>             int result = data * data;
>             printIntLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
>         break;
>     default:
> 
>         printLine("Benign, fixed string");
>         break;
>     }
> }
> 
> 
> static void goodG2B1()
> {
>     int data;
> 
>     data = 0;
>     switch(5)
>     {
>     case 6:
> 
>         printLine("Benign, fixed string");
>         break;
>     default:
> 
>         data = 2;
>         break;
>     }
>     switch(7)
>     {
>     case 7:
>     {
> 
>         int result = data * data;
>         printIntLine(result);
>     }
>     break;
>     default:
> 
>         printLine("Benign, fixed string");
>         break;
>     }
> }
> 
> 
> static void goodG2B2()
> {
>     int data;
> 
>     data = 0;
>     switch(6)
>     {
>     case 6:
> 
>         data = 2;
>         break;
>     default:
> 
>         printLine("Benign, fixed string");
>         break;
>     }
>     switch(7)
>     {
>     case 7:
5939a6143,6150
> 
> void CWE190_Integer_Overflow__int_listen_socket_square_15_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B1();
>     goodG2B2();
> }
5949a6161,6163
>     printLine("Calling good()...");
>     CWE190_Integer_Overflow__int_listen_socket_square_15_good();
>     printLine("Finished good()");
5955,5957d6168
<     printLine("Calling bad()...");
<     CWE190_Integer_Overflow__int_listen_socket_square_15_bad();
<     printLine("Finished bad()");
