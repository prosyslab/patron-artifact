3733a3734
> # 62 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_square_09.c"
3734a3736,3739
> # 62 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_square_09.c"
> static void goodB2G1()
> {
>     int data;
3735a3741,3745
>     data = 0;
>     if(GLOBAL_CONST_TRUE)
>     {
>         {
>             char inputBuffer[(3 * sizeof(data) + 2)] = "";
3736a3747,3756
>             if (fgets(inputBuffer, (3 * sizeof(data) + 2), 
> # 72 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_square_09.c" 3 4
>                                                    stdin
> # 72 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_square_09.c"
>                                                         ) != 
> # 72 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_square_09.c" 3 4
>                                                              ((void *)0)
> # 72 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_square_09.c"
>                                                                  )
>             {
3738,3739c3758,3791
< # 26 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_square_09.c"
< void CWE190_Integer_Overflow__int_fgets_square_09_bad()
---
>                 data = atoi(inputBuffer);
>             }
>             else
>             {
>                 printLine("fgets() failed.");
>             }
>         }
>     }
>     if(GLOBAL_CONST_FALSE)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         if (data > 
> # 91 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_square_09.c" 3 4
>                   (-0x7fffffff - 1) 
> # 91 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_square_09.c"
>                           && abs(data) < (long)sqrt((double)0x7fffffff))
>         {
>             int result = data * data;
>             printIntLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
>     }
> }
> 
> 
> static void goodB2G2()
3750c3802
< # 36 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_square_09.c" 3 4
---
> # 114 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_square_09.c" 3 4
3752c3804
< # 36 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_square_09.c"
---
> # 114 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_square_09.c"
3754c3806
< # 36 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_square_09.c" 3 4
---
> # 114 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_square_09.c" 3 4
3756c3808
< # 36 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_square_09.c"
---
> # 114 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_square_09.c"
3769a3822,3877
> 
>         if (data > 
> # 128 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_square_09.c" 3 4
>                   (-0x7fffffff - 1) 
> # 128 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_square_09.c"
>                           && abs(data) < (long)sqrt((double)0x7fffffff))
>         {
>             int result = data * data;
>             printIntLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
>     }
> }
> 
> 
> static void goodG2B1()
> {
>     int data;
> 
>     data = 0;
>     if(GLOBAL_CONST_FALSE)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         data = 2;
>     }
>     if(GLOBAL_CONST_TRUE)
>     {
>         {
> 
>             int result = data * data;
>             printIntLine(result);
>         }
>     }
> }
> 
> 
> static void goodG2B2()
> {
>     int data;
> 
>     data = 0;
>     if(GLOBAL_CONST_TRUE)
>     {
> 
>         data = 2;
>     }
>     if(GLOBAL_CONST_TRUE)
>     {
3776a3885,3892
> 
> void CWE190_Integer_Overflow__int_fgets_square_09_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B1();
>     goodG2B2();
> }
3786a3903,3905
>     printLine("Calling good()...");
>     CWE190_Integer_Overflow__int_fgets_square_09_good();
>     printLine("Finished good()");
3792,3794d3910
<     printLine("Calling bad()...");
<     CWE190_Integer_Overflow__int_fgets_square_09_bad();
<     printLine("Finished bad()");
