3239a3240
> # 56 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_31.c"
3240a3242,3259
> # 56 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_31.c"
> static void goodG2B()
> {
>     void * data;
>     data = 
> # 59 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_31.c" 3 4
>           ((void *)0)
> # 59 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_31.c"
>               ;
>     {
>         char * dataGoodBuffer = (char *)malloc(50*sizeof(char));
>         if (dataGoodBuffer == 
> # 62 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_31.c" 3 4
>                              ((void *)0)
> # 62 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_31.c"
>                                  ) {exit(-1);}
>         memset(dataGoodBuffer, 'A', 50-1);
>         dataGoodBuffer[50-1] = '\0';
3241a3261,3280
>         data = (void *)dataGoodBuffer;
>     }
>     {
>         void * dataCopy = data;
>         void * data = dataCopy;
>         {
> 
>             size_t dataLen = strlen((char *)data);
>             void * dest = (void *)calloc(dataLen+1, 1);
>             if (dest == 
> # 75 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_31.c" 3 4
>                        ((void *)0)
> # 75 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_31.c"
>                            ) {exit(-1);}
>             (void)strcpy(dest, data);
>             printLine((char *)dest);
>             free(dest);
>         }
>     }
> }
3244,3245c3283
< # 24 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_31.c"
< void CWE122_Heap_Based_Buffer_Overflow__CWE135_31_bad()
---
> static void goodB2G()
3249c3287
< # 27 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_31.c" 3 4
---
> # 87 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_31.c" 3 4
3251c3289
< # 27 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_31.c"
---
> # 87 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_31.c"
3256c3294
< # 30 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_31.c" 3 4
---
> # 90 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_31.c" 3 4
3258c3296
< # 30 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_31.c"
---
> # 90 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_31.c"
3270c3308
<             size_t dataLen = strlen((char *)data);
---
>             size_t dataLen = wcslen((wchar_t *)data);
3273c3311
< # 43 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_31.c" 3 4
---
> # 103 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_31.c" 3 4
3275c3313
< # 43 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_31.c"
---
> # 103 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_31.c"
3278c3316
<             printLine((char *)dest);
---
>             printWLine((wchar_t *)dest);
3282a3321,3326
> 
> void CWE122_Heap_Based_Buffer_Overflow__CWE135_31_good()
> {
>     goodG2B();
>     goodB2G();
> }
3292a3337,3339
>     printLine("Calling good()...");
>     CWE122_Heap_Based_Buffer_Overflow__CWE135_31_good();
>     printLine("Finished good()");
3298,3300d3344
<     printLine("Calling bad()...");
<     CWE122_Heap_Based_Buffer_Overflow__CWE135_31_bad();
<     printLine("Finished bad()");
