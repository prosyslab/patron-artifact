3240a3241
> # 63 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_61a.c"
3241a3243,3244
> # 63 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_61a.c"
> size_t CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_61b_goodG2BSource(size_t data);
3242a3246,3248
> static void goodG2B()
> {
>     size_t data;
3243a3250,3253
>     data = 0;
>     data = CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_61b_goodG2BSource(data);
>     {
>         char * myString;
3246a3257,3264
>         if (data > strlen("hello"))
>         {
>             myString = (char *)malloc(data*sizeof(char));
>             if (myString == 
> # 79 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_61a.c" 3 4
>                            ((void *)0)
> # 79 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_61a.c"
>                                ) {exit(-1);}
3247a3266,3275
>             strcpy(myString, "hello");
>             printLine(myString);
>             free(myString);
>         }
>         else
>         {
>             printLine("Input is less than the length of the source string");
>         }
>     }
> }
3249,3250d3276
< # 29 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_61a.c"
< size_t CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_61b_badSource(size_t data);
3252c3278,3280
< void CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_61_bad()
---
> size_t CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_61b_goodB2GSource(size_t data);
> 
> static void goodB2G()
3257c3285
<     data = CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_61b_badSource(data);
---
>     data = CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_61b_goodB2GSource(data);
3263c3291
<         if (data > strlen("hello"))
---
>         if (data > strlen("hello") && data < 100)
3267c3295
< # 45 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_61a.c" 3 4
---
> # 109 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_61a.c" 3 4
3269c3297
< # 45 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_61a.c"
---
> # 109 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_61a.c"
3278c3306
<             printLine("Input is less than the length of the source string");
---
>             printLine("Input is less than the length of the source string or too large");
3281a3310,3315
> 
> void CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_61_good()
> {
>     goodG2B();
>     goodB2G();
> }
3291a3326,3328
>     printLine("Calling good()...");
>     CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_61_good();
>     printLine("Finished good()");
3297,3299d3333
<     printLine("Calling bad()...");
<     CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_61_bad();
<     printLine("Finished bad()");
