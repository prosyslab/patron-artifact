3246a3247,3266
> # 63 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_07.c"
> static void goodB2G1()
> {
>     void * data;
>     data = 
> # 66 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_07.c" 3 4
>           ((void *)0)
> # 66 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_07.c"
>               ;
>     if(staticFive==5)
>     {
>         {
>             wchar_t * dataBadBuffer = (wchar_t *)malloc(50*sizeof(wchar_t));
>             if (dataBadBuffer == 
> # 71 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_07.c" 3 4
>                                 ((void *)0)
> # 71 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_07.c"
>                                     ) {exit(-1);}
>             wmemset(dataBadBuffer, L'A', 50-1);
>             dataBadBuffer[50-1] = L'\0';
3247a3268,3272
>             data = (void *)dataBadBuffer;
>         }
>     }
>     if(staticFive!=5)
>     {
3248a3274,3278
>         printLine("Benign, fixed string");
>     }
>     else
>     {
>         {
3250c3280,3295
< void CWE122_Heap_Based_Buffer_Overflow__CWE135_07_bad()
---
>             size_t dataLen = wcslen((wchar_t *)data);
>             void * dest = (void *)calloc(dataLen+1, sizeof(wchar_t));
>             if (dest == 
> # 89 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_07.c" 3 4
>                        ((void *)0)
> # 89 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_07.c"
>                            ) {exit(-1);}
>             (void)wcscpy(dest, data);
>             printWLine((wchar_t *)dest);
>             free(dest);
>         }
>     }
> }
> 
> 
> static void goodB2G2()
3254c3299
< # 32 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_07.c" 3 4
---
> # 101 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_07.c" 3 4
3256c3301
< # 32 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_07.c"
---
> # 101 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_07.c"
3263c3308
< # 37 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_07.c" 3 4
---
> # 106 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_07.c" 3 4
3265c3310
< # 37 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_07.c"
---
> # 106 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_07.c"
3277c3322
<             size_t dataLen = strlen((char *)data);
---
>             size_t dataLen = wcslen((wchar_t *)data);
3280c3325
< # 50 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_07.c" 3 4
---
> # 119 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_07.c" 3 4
3282c3327
< # 50 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_07.c"
---
> # 119 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_07.c"
3284a3330,3418
>             printWLine((wchar_t *)dest);
>             free(dest);
>         }
>     }
> }
> 
> 
> static void goodG2B1()
> {
>     void * data;
>     data = 
> # 131 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_07.c" 3 4
>           ((void *)0)
> # 131 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_07.c"
>               ;
>     if(staticFive!=5)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
>         {
>             char * dataGoodBuffer = (char *)malloc(50*sizeof(char));
>             if (dataGoodBuffer == 
> # 141 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_07.c" 3 4
>                                  ((void *)0)
> # 141 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_07.c"
>                                      ) {exit(-1);}
>             memset(dataGoodBuffer, 'A', 50-1);
>             dataGoodBuffer[50-1] = '\0';
> 
>             data = (void *)dataGoodBuffer;
>         }
>     }
>     if(staticFive==5)
>     {
>         {
> 
>             size_t dataLen = strlen((char *)data);
>             void * dest = (void *)calloc(dataLen+1, 1);
>             if (dest == 
> # 154 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_07.c" 3 4
>                        ((void *)0)
> # 154 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_07.c"
>                            ) {exit(-1);}
>             (void)strcpy(dest, data);
>             printLine((char *)dest);
>             free(dest);
>         }
>     }
> }
> 
> 
> static void goodG2B2()
> {
>     void * data;
>     data = 
> # 166 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_07.c" 3 4
>           ((void *)0)
> # 166 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_07.c"
>               ;
>     if(staticFive==5)
>     {
>         {
>             char * dataGoodBuffer = (char *)malloc(50*sizeof(char));
>             if (dataGoodBuffer == 
> # 171 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_07.c" 3 4
>                                  ((void *)0)
> # 171 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_07.c"
>                                      ) {exit(-1);}
>             memset(dataGoodBuffer, 'A', 50-1);
>             dataGoodBuffer[50-1] = '\0';
> 
>             data = (void *)dataGoodBuffer;
>         }
>     }
>     if(staticFive==5)
>     {
>         {
> 
>             size_t dataLen = strlen((char *)data);
>             void * dest = (void *)calloc(dataLen+1, 1);
>             if (dest == 
> # 184 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_07.c" 3 4
>                        ((void *)0)
> # 184 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE135_07.c"
>                            ) {exit(-1);}
>             (void)strcpy(dest, data);
3289a3424,3431
> 
> void CWE122_Heap_Based_Buffer_Overflow__CWE135_07_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B1();
>     goodG2B2();
> }
3299a3442,3444
>     printLine("Calling good()...");
>     CWE122_Heap_Based_Buffer_Overflow__CWE135_07_good();
>     printLine("Finished good()");
3305,3307d3449
<     printLine("Calling bad()...");
<     CWE122_Heap_Based_Buffer_Overflow__CWE135_07_bad();
<     printLine("Finished bad()");
