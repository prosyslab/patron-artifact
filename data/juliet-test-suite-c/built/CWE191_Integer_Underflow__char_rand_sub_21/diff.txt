2813a2814,2817
> # 52 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_21.c"
> static int goodB2G1Static = 0;
> static int goodB2G2Static = 0;
> static int goodG2BStatic = 0;
2815a2820,2844
> static void goodB2G1Sink(char data)
> {
>     if(goodB2G1Static)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         if (data > 
> # 67 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_21.c" 3 4
>                   (-0x7f - 1)
> # 67 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_21.c"
>                           )
>         {
>             char result = data - 1;
>             printHexCharLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform subtraction.");
>         }
>     }
> }
2816a2846,2854
> static void goodB2G1()
> {
>     char data;
>     data = ' ';
> 
>     data = (char)((int)(rand() & 1 ? (((unsigned)rand()<<30) ^ ((unsigned)rand()<<15) ^ rand()) : -(((unsigned)rand()<<30) ^ ((unsigned)rand()<<15) ^ rand()) - 1));
>     goodB2G1Static = 0;
>     goodB2G1Sink(data);
> }
2818d2855
< static int badStatic = 0;
2820c2857
< static void badSink(char data)
---
> static void goodB2G2Sink(char data)
2822c2859
<     if(badStatic)
---
>     if(goodB2G2Static)
2824d2860
<         {
2825a2862,2867
>         if (data > 
> # 95 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_21.c" 3 4
>                   (-0x7f - 1)
> # 95 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_rand_sub_21.c"
>                           )
>         {
2828a2871,2874
>         else
>         {
>             printLine("data value is too large to perform subtraction.");
>         }
2832c2878
< void CWE191_Integer_Underflow__char_rand_sub_21_bad()
---
> static void goodB2G2()
2838,2839c2884,2915
<     badStatic = 1;
<     badSink(data);
---
>     goodB2G2Static = 1;
>     goodB2G2Sink(data);
> }
> 
> 
> static void goodG2BSink(char data)
> {
>     if(goodG2BStatic)
>     {
>         {
> 
>             char result = data - 1;
>             printHexCharLine(result);
>         }
>     }
> }
> 
> static void goodG2B()
> {
>     char data;
>     data = ' ';
> 
>     data = -2;
>     goodG2BStatic = 1;
>     goodG2BSink(data);
> }
> 
> void CWE191_Integer_Underflow__char_rand_sub_21_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B();
2850a2927,2929
>     printLine("Calling good()...");
>     CWE191_Integer_Underflow__char_rand_sub_21_good();
>     printLine("Finished good()");
2856,2858d2934
<     printLine("Calling bad()...");
<     CWE191_Integer_Underflow__char_rand_sub_21_bad();
<     printLine("Finished bad()");
