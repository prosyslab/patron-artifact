3731a3732
> # 42 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_fscanf_square_64b.c"
3732a3734,3736
> # 42 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_fscanf_square_64b.c"
> void CWE190_Integer_Overflow__short_fscanf_square_64b_goodG2BSink(void * dataVoidPtr)
> {
3733a3738
>     short * dataPtr = (short *)dataVoidPtr;
3734a3740,3741
>     short data = (*dataPtr);
>     {
3736,3737c3743,3749
< # 24 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s04/CWE190_Integer_Overflow__short_fscanf_square_64b.c"
< void CWE190_Integer_Overflow__short_fscanf_square_64b_badSink(void * dataVoidPtr)
---
>         short result = data * data;
>         printIntLine(result);
>     }
> }
> 
> 
> void CWE190_Integer_Overflow__short_fscanf_square_64b_goodB2GSink(void * dataVoidPtr)
3743d3754
<     {
3744a3756,3757
>     if (abs((long)data) <= (long)sqrt((double)0x7fff))
>     {
3746a3760,3763
>     }
>     else
>     {
>         printLine("data value is too large to perform arithmetic safely.");
