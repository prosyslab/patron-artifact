2813a2814,2817
> # 67 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_multiply_21.c"
> static int goodB2G1Static = 0;
> static int goodB2G2Static = 0;
> static int goodG2BStatic = 0;
2815a2820,2830
> static void goodB2G1Sink(int data)
> {
>     if(goodB2G1Static)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
>         if(data > 0)
>         {
2816a2832,2843
>             if (data < (0x7fffffff/2))
>             {
>                 int result = data * 2;
>                 printIntLine(result);
>             }
>             else
>             {
>                 printLine("data value is too large to perform arithmetic safely.");
>             }
>         }
>     }
> }
2817a2845,2847
> static void goodB2G1()
> {
>     int data;
2818a2849,2851
>     data = 0;
>     {
>         char inputBuffer[(3 * sizeof(data) + 2)] = "";
2820c2853,2862
< static int badStatic = 0;
---
>         if (fgets(inputBuffer, (3 * sizeof(data) + 2), 
> # 105 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_multiply_21.c" 3 4
>                                                stdin
> # 105 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_multiply_21.c"
>                                                     ) != 
> # 105 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_multiply_21.c" 3 4
>                                                          ((void *)0)
> # 105 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_multiply_21.c"
>                                                              )
>         {
2822c2864,2876
< static void badSink(int data)
---
>             data = atoi(inputBuffer);
>         }
>         else
>         {
>             printLine("fgets() failed.");
>         }
>     }
>     goodB2G1Static = 0;
>     goodB2G1Sink(data);
> }
> 
> 
> static void goodB2G2Sink(int data)
2824c2878
<     if(badStatic)
---
>     if(goodB2G2Static)
2829,2830c2883,2891
<             int result = data * 2;
<             printIntLine(result);
---
>             if (data < (0x7fffffff/2))
>             {
>                 int result = data * 2;
>                 printIntLine(result);
>             }
>             else
>             {
>                 printLine("data value is too large to perform arithmetic safely.");
>             }
2835c2896
< void CWE190_Integer_Overflow__int_fgets_multiply_21_bad()
---
> static void goodB2G2()
2844c2905
< # 48 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_multiply_21.c" 3 4
---
> # 148 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_multiply_21.c" 3 4
2846c2907
< # 48 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_multiply_21.c"
---
> # 148 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_multiply_21.c"
2848c2909
< # 48 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_multiply_21.c" 3 4
---
> # 148 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_multiply_21.c" 3 4
2850c2911
< # 48 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_multiply_21.c"
---
> # 148 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_multiply_21.c"
2861,2862c2922,2955
<     badStatic = 1;
<     badSink(data);
---
>     goodB2G2Static = 1;
>     goodB2G2Sink(data);
> }
> 
> 
> static void goodG2BSink(int data)
> {
>     if(goodG2BStatic)
>     {
>         if(data > 0)
>         {
> 
>             int result = data * 2;
>             printIntLine(result);
>         }
>     }
> }
> 
> static void goodG2B()
> {
>     int data;
> 
>     data = 0;
> 
>     data = 2;
>     goodG2BStatic = 1;
>     goodG2BSink(data);
> }
> 
> void CWE190_Integer_Overflow__int_fgets_multiply_21_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B();
2873a2967,2969
>     printLine("Calling good()...");
>     CWE190_Integer_Overflow__int_fgets_multiply_21_good();
>     printLine("Finished good()");
2879,2881d2974
<     printLine("Calling bad()...");
<     CWE190_Integer_Overflow__int_fgets_multiply_21_bad();
<     printLine("Finished bad()");
