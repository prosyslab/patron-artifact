2813a2814,2836
> # 47 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_fscanf_multiply_13.c"
> static void goodB2G1()
> {
>     char data;
>     data = ' ';
>     if(GLOBAL_CONST_FIVE==5)
>     {
> 
>         fscanf (
> # 54 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_fscanf_multiply_13.c" 3 4
>                stdin
> # 54 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_fscanf_multiply_13.c"
>                     , "%c", &data);
>     }
>     if(GLOBAL_CONST_FIVE!=5)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
>         if(data < 0)
>         {
2814a2838,2853
>             if (data > (
> # 66 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_fscanf_multiply_13.c" 3 4
>                        (-0x7f - 1)
> # 66 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_fscanf_multiply_13.c"
>                                /2))
>             {
>                 char result = data * 2;
>                 printHexCharLine(result);
>             }
>             else
>             {
>                 printLine("data value is too small to perform multiplication.");
>             }
>         }
>     }
> }
2817c2856
< void CWE191_Integer_Underflow__char_fscanf_multiply_13_bad()
---
> static void goodB2G2()
2825c2864
< # 29 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_fscanf_multiply_13.c" 3 4
---
> # 87 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_fscanf_multiply_13.c" 3 4
2827c2866
< # 29 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_fscanf_multiply_13.c"
---
> # 87 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_fscanf_multiply_13.c"
2834a2874,2931
>             if (data > (
> # 94 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_fscanf_multiply_13.c" 3 4
>                        (-0x7f - 1)
> # 94 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_fscanf_multiply_13.c"
>                                /2))
>             {
>                 char result = data * 2;
>                 printHexCharLine(result);
>             }
>             else
>             {
>                 printLine("data value is too small to perform multiplication.");
>             }
>         }
>     }
> }
> 
> 
> static void goodG2B1()
> {
>     char data;
>     data = ' ';
>     if(GLOBAL_CONST_FIVE!=5)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         data = -2;
>     }
>     if(GLOBAL_CONST_FIVE==5)
>     {
>         if(data < 0)
>         {
> 
>             char result = data * 2;
>             printHexCharLine(result);
>         }
>     }
> }
> 
> 
> static void goodG2B2()
> {
>     char data;
>     data = ' ';
>     if(GLOBAL_CONST_FIVE==5)
>     {
> 
>         data = -2;
>     }
>     if(GLOBAL_CONST_FIVE==5)
>     {
>         if(data < 0)
>         {
> 
2839a2937,2944
> 
> void CWE191_Integer_Underflow__char_fscanf_multiply_13_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B1();
>     goodG2B2();
> }
2849a2955,2957
>     printLine("Calling good()...");
>     CWE191_Integer_Underflow__char_fscanf_multiply_13_good();
>     printLine("Finished good()");
2855,2857d2962
<     printLine("Calling bad()...");
<     CWE191_Integer_Underflow__char_fscanf_multiply_13_bad();
<     printLine("Finished bad()");
