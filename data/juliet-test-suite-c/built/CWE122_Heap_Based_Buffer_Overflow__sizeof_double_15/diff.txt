2813a2814,2840
> # 50 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_15.c"
> static void goodG2B1()
> {
>     double * data;
> 
>     data = 
> # 54 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_15.c" 3 4
>           ((void *)0)
> # 54 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_15.c"
>               ;
>     switch(5)
>     {
>     case 6:
> 
>         printLine("Benign, fixed string");
>         break;
>     default:
> 
>         data = (double *)malloc(sizeof(*data));
>         if (data == 
> # 64 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_15.c" 3 4
>                    ((void *)0)
> # 64 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_15.c"
>                        ) {exit(-1);}
>         *data = 1.7E300;
>         break;
>     }
2814a2842,2844
>     printDoubleLine(*data);
>     free(data);
> }
2817c2847
< void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_15_bad()
---
> static void goodG2B2()
2822c2852
< # 25 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_15.c" 3 4
---
> # 78 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_15.c" 3 4
2824c2854
< # 25 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_15.c"
---
> # 78 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_15.c"
2830,2831c2860
< 
<         data = (double *)malloc(sizeof(data));
---
>         data = (double *)malloc(sizeof(*data));
2833c2862
< # 32 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_15.c" 3 4
---
> # 84 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_15.c" 3 4
2835c2864
< # 32 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_15.c"
---
> # 84 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_15.c"
2847a2877,2882
> 
> void CWE122_Heap_Based_Buffer_Overflow__sizeof_double_15_good()
> {
>     goodG2B1();
>     goodG2B2();
> }
2857a2893,2895
>     printLine("Calling good()...");
>     CWE122_Heap_Based_Buffer_Overflow__sizeof_double_15_good();
>     printLine("Finished good()");
2863,2865d2900
<     printLine("Calling bad()...");
<     CWE122_Heap_Based_Buffer_Overflow__sizeof_double_15_bad();
<     printLine("Finished bad()");
