2814,2817c2814,2815
< 
< 
< 
< void CWE191_Integer_Underflow__short_min_multiply_18_bad()
---
> # 45 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_min_multiply_18.c"
> static void goodB2G()
2825c2823
< # 29 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_min_multiply_18.c" 3 4
---
> # 52 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_min_multiply_18.c" 3 4
2827c2825
< # 29 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_min_multiply_18.c"
---
> # 52 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_min_multiply_18.c"
2833a2832,2861
>         if (data > (
> # 58 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_min_multiply_18.c" 3 4
>                    (-0x7fff - 1)
> # 58 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_min_multiply_18.c"
>                            /2))
>         {
>             short result = data * 2;
>             printIntLine(result);
>         }
>         else
>         {
>             printLine("data value is too small to perform multiplication.");
>         }
>     }
> }
> 
> 
> static void goodG2B()
> {
>     short data;
>     data = 0;
>     goto source;
> source:
> 
>     data = -2;
>     goto sink;
> sink:
>     if(data < 0)
>     {
> 
2837a2866,2871
> 
> void CWE191_Integer_Underflow__short_min_multiply_18_good()
> {
>     goodB2G();
>     goodG2B();
> }
2847a2882,2884
>     printLine("Calling good()...");
>     CWE191_Integer_Underflow__short_min_multiply_18_good();
>     printLine("Finished good()");
2853,2855d2889
<     printLine("Calling bad()...");
<     CWE191_Integer_Underflow__short_min_multiply_18_bad();
<     printLine("Finished bad()");
