2813a2814,2817
> # 45 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int64_t_rand_sub_41.c"
> static void goodG2BSink(int64_t data)
> {
>     {
2814a2819,2822
>         int64_t result = data - 1;
>         printLongLongLine(result);
>     }
> }
2815a2824,2827
> static void goodG2B()
> {
>     int64_t data;
>     data = 0LL;
2817c2829,2834
< static void badSink(int64_t data)
---
>     data = -2;
>     goodG2BSink(data);
> }
> 
> 
> static void goodB2GSink(int64_t data)
2819d2835
<     {
2820a2837,2842
>     if (data > 
> # 67 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int64_t_rand_sub_41.c" 3 4
>               (-0x7fffffffffffffffLL - 1LL)
> # 67 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int64_t_rand_sub_41.c"
>                        )
>     {
2823a2846,2849
>     else
>     {
>         printLine("data value is too large to perform subtraction.");
>     }
2826c2852
< void CWE191_Integer_Underflow__int64_t_rand_sub_41_bad()
---
> static void goodB2G()
2832c2858,2864
<     badSink(data);
---
>     goodB2GSink(data);
> }
> 
> void CWE191_Integer_Underflow__int64_t_rand_sub_41_good()
> {
>     goodB2G();
>     goodG2B();
2843a2876,2878
>     printLine("Calling good()...");
>     CWE191_Integer_Underflow__int64_t_rand_sub_41_good();
>     printLine("Finished good()");
2849,2851d2883
<     printLine("Calling bad()...");
<     CWE191_Integer_Underflow__int64_t_rand_sub_41_bad();
<     printLine("Finished bad()");
