2813a2814,2817
> # 48 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__int_max_postinc_09.c"
> static void goodB2G1()
> {
>     int data;
2814a2819,2826
>     data = 0;
>     if(GLOBAL_CONST_TRUE)
>     {
> 
>         data = 0x7fffffff;
>     }
>     if(GLOBAL_CONST_FALSE)
>     {
2815a2828,2831
>         printLine("Benign, fixed string");
>     }
>     else
>     {
2817c2833,2847
< void CWE190_Integer_Overflow__int_max_postinc_09_bad()
---
>         if (data < 0x7fffffff)
>         {
>             data++;
>             int result = data;
>             printIntLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
>     }
> }
> 
> 
> static void goodB2G2()
2828a2859,2912
> 
>         if (data < 0x7fffffff)
>         {
>             data++;
>             int result = data;
>             printIntLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
>     }
> }
> 
> 
> static void goodG2B1()
> {
>     int data;
> 
>     data = 0;
>     if(GLOBAL_CONST_FALSE)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         data = 2;
>     }
>     if(GLOBAL_CONST_TRUE)
>     {
>         {
> 
>             data++;
>             int result = data;
>             printIntLine(result);
>         }
>     }
> }
> 
> 
> static void goodG2B2()
> {
>     int data;
> 
>     data = 0;
>     if(GLOBAL_CONST_TRUE)
>     {
> 
>         data = 2;
>     }
>     if(GLOBAL_CONST_TRUE)
>     {
2836a2921,2928
> 
> void CWE190_Integer_Overflow__int_max_postinc_09_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B1();
>     goodG2B2();
> }
2846a2939,2941
>     printLine("Calling good()...");
>     CWE190_Integer_Overflow__int_max_postinc_09_good();
>     printLine("Finished good()");
2852,2854d2946
<     printLine("Calling bad()...");
<     CWE190_Integer_Overflow__int_max_postinc_09_bad();
<     printLine("Finished bad()");
