2813a2814,2830
> # 46 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_add_02.c"
> static void goodB2G1()
> {
>     char data;
>     data = ' ';
>     if(1)
>     {
> 
>         data = (char)((int)(rand() & 1 ? (((unsigned)rand()<<30) ^ ((unsigned)rand()<<15) ^ rand()) : -(((unsigned)rand()<<30) ^ ((unsigned)rand()<<15) ^ rand()) - 1));
>     }
>     if(0)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
2814a2832,2842
>         if (data < 0x7f)
>         {
>             char result = data + 1;
>             printHexCharLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
>     }
> }
2817c2845
< void CWE190_Integer_Overflow__char_rand_add_02_bad()
---
> static void goodB2G2()
2827a2856,2885
> 
>         if (data < 0x7f)
>         {
>             char result = data + 1;
>             printHexCharLine(result);
>         }
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
>     }
> }
> 
> 
> static void goodG2B1()
> {
>     char data;
>     data = ' ';
>     if(0)
>     {
> 
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         data = 2;
>     }
>     if(1)
>     {
2834a2893,2920
> 
> 
> static void goodG2B2()
> {
>     char data;
>     data = ' ';
>     if(1)
>     {
> 
>         data = 2;
>     }
>     if(1)
>     {
>         {
> 
>             char result = data + 1;
>             printHexCharLine(result);
>         }
>     }
> }
> 
> void CWE190_Integer_Overflow__char_rand_add_02_good()
> {
>     goodB2G1();
>     goodB2G2();
>     goodG2B1();
>     goodG2B2();
> }
2844a2931,2933
>     printLine("Calling good()...");
>     CWE190_Integer_Overflow__char_rand_add_02_good();
>     printLine("Finished good()");
2850,2852d2938
<     printLine("Calling bad()...");
<     CWE190_Integer_Overflow__char_rand_add_02_bad();
<     printLine("Finished bad()");
