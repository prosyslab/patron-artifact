3731a3732
> # 68 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_fscanf_square_12.c"
3733,3737c3734,3735
< 
< 
< 
< # 24 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_fscanf_square_12.c"
< void CWE190_Integer_Overflow__char_fscanf_square_12_bad()
---
> # 68 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_fscanf_square_12.c"
> static void goodB2G()
3745c3743
< # 31 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_fscanf_square_12.c" 3 4
---
> # 75 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_fscanf_square_12.c" 3 4
3747c3745
< # 31 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_fscanf_square_12.c"
---
> # 75 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_fscanf_square_12.c"
3753c3751,3755
<         data = 2;
---
>         fscanf (
> # 80 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_fscanf_square_12.c" 3 4
>                stdin
> # 80 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_fscanf_square_12.c"
>                     , "%c", &data);
3757d3758
<         {
3758a3760,3761
>         if (abs((long)data) <= (long)sqrt((double)0x7f))
>         {
3761a3765,3768
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
3776a3784,3824
> 
> 
> 
> 
> static void goodG2B()
> {
>     char data;
>     data = ' ';
>     if(globalReturnsTrueOrFalse())
>     {
> 
>         data = 2;
>     }
>     else
>     {
> 
>         data = 2;
>     }
>     if(globalReturnsTrueOrFalse())
>     {
>         {
> 
>             char result = data * data;
>             printHexCharLine(result);
>         }
>     }
>     else
>     {
>         {
> 
>             char result = data * data;
>             printHexCharLine(result);
>         }
>     }
> }
> 
> void CWE190_Integer_Overflow__char_fscanf_square_12_good()
> {
>     goodB2G();
>     goodG2B();
> }
3786a3835,3837
>     printLine("Calling good()...");
>     CWE190_Integer_Overflow__char_fscanf_square_12_good();
>     printLine("Finished good()");
3792,3794d3842
<     printLine("Calling bad()...");
<     CWE190_Integer_Overflow__char_fscanf_square_12_bad();
<     printLine("Finished bad()");
