3731a3732
> # 68 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_12.c"
3733,3737c3734,3735
< 
< 
< 
< # 24 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_12.c"
< void CWE190_Integer_Overflow__char_rand_square_12_bad()
---
> # 68 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__char_rand_square_12.c"
> static void goodB2G()
3749c3747
<         data = 2;
---
>         data = (char)((int)(rand() & 1 ? (((unsigned)rand()<<30) ^ ((unsigned)rand()<<15) ^ rand()) : -(((unsigned)rand()<<30) ^ ((unsigned)rand()<<15) ^ rand()) - 1));
3753d3750
<         {
3754a3752,3753
>         if (abs((long)data) <= (long)sqrt((double)0x7f))
>         {
3757a3757,3760
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
3772a3776,3816
> 
> 
> 
> 
> static void goodG2B()
> {
>     char data;
>     data = ' ';
>     if(globalReturnsTrueOrFalse())
>     {
> 
>         data = 2;
>     }
>     else
>     {
> 
>         data = 2;
>     }
>     if(globalReturnsTrueOrFalse())
>     {
>         {
> 
>             char result = data * data;
>             printHexCharLine(result);
>         }
>     }
>     else
>     {
>         {
> 
>             char result = data * data;
>             printHexCharLine(result);
>         }
>     }
> }
> 
> void CWE190_Integer_Overflow__char_rand_square_12_good()
> {
>     goodB2G();
>     goodG2B();
> }
3782a3827,3829
>     printLine("Calling good()...");
>     CWE190_Integer_Overflow__char_rand_square_12_good();
>     printLine("Finished good()");
3788,3790d3834
<     printLine("Calling bad()...");
<     CWE190_Integer_Overflow__char_rand_square_12_bad();
<     printLine("Finished bad()");
