3244a3245,3255
> # 59 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_07.c"
> static void goodG2B1()
> {
>     char * data;
>     data = 
> # 62 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_07.c" 3 4
>           ((void *)0)
> # 62 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_07.c"
>               ;
>     if(staticFive!=5)
>     {
3245a3257,3277
>         printLine("Benign, fixed string");
>     }
>     else
>     {
> 
>         data = (char *)malloc((10+1)*sizeof(char));
>         if (data == 
> # 72 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_07.c" 3 4
>                    ((void *)0)
> # 72 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_07.c"
>                        ) {exit(-1);}
>     }
>     {
>         char source[10+1] = "AAAAAAAAAA";
> 
> 
>         memmove(data, source, (strlen(source) + 1) * sizeof(char));
>         printLine(data);
>         free(data);
>     }
> }
3248c3280
< void CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_07_bad()
---
> static void goodG2B2()
3252c3284
< # 37 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_07.c" 3 4
---
> # 88 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_07.c" 3 4
3254c3286
< # 37 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_07.c"
---
> # 88 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_07.c"
3259c3291
<         data = (char *)malloc(10*sizeof(char));
---
>         data = (char *)malloc((10+1)*sizeof(char));
3261c3293
< # 42 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_07.c" 3 4
---
> # 93 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_07.c" 3 4
3263c3295
< # 42 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_07.c"
---
> # 93 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_07.c"
3274a3307,3312
> 
> void CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_07_good()
> {
>     goodG2B1();
>     goodG2B2();
> }
3284a3323,3325
>     printLine("Calling good()...");
>     CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_07_good();
>     printLine("Finished good()");
3290,3292d3330
<     printLine("Calling bad()...");
<     CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_07_bad();
<     printLine("Finished bad()");
