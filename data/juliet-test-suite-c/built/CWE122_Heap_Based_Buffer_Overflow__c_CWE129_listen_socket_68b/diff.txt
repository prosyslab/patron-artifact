4906,4909c4906,4907
< 
< 
< 
< void CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_68b_badSink()
---
> # 84 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_68b.c"
> void CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_68b_goodG2BSink()
4911c4909
<     int data = CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_68_badData;
---
>     int data = CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_68_goodG2BData;
4916c4914
< # 54 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_68b.c" 3 4
---
> # 90 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_68b.c" 3 4
4918c4916
< # 54 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_68b.c"
---
> # 90 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_68b.c"
4938a4937,4971
>         }
>         free(buffer);
>     }
> }
> 
> 
> void CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_68b_goodB2GSink()
> {
>     int data = CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_68_goodB2GData;
>     {
>         int i;
>         int * buffer = (int *)malloc(10 * sizeof(int));
>         if (buffer == 
> # 122 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_68b.c" 3 4
>                      ((void *)0)
> # 122 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_68b.c"
>                          ) {exit(-1);}
> 
>         for (i = 0; i < 10; i++)
>         {
>             buffer[i] = 0;
>         }
> 
>         if (data >= 0 && data < (10))
>         {
>             buffer[data] = 1;
> 
>             for(i = 0; i < 10; i++)
>             {
>                 printIntLine(buffer[i]);
>             }
>         }
>         else
>         {
>             printLine("ERROR: Array index is out-of-bounds");
