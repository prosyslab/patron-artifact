2813a2814,2818
> # 45 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_min_predec_31.c"
> static void goodG2B()
> {
>     char data;
>     data = ' ';
2814a2820,2831
>     data = -2;
>     {
>         char dataCopy = data;
>         char data = dataCopy;
>         {
> 
>             --data;
>             char result = data;
>             printHexCharLine(result);
>         }
>     }
> }
2817c2834
< void CWE191_Integer_Underflow__char_min_predec_31_bad()
---
> static void goodB2G()
2823c2840
< # 27 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_min_predec_31.c" 3 4
---
> # 69 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_min_predec_31.c" 3 4
2825c2842
< # 27 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_min_predec_31.c"
---
> # 69 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_min_predec_31.c"
2830d2846
<         {
2831a2848,2853
>         if (data > 
> # 74 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_min_predec_31.c" 3 4
>                   (-0x7f - 1)
> # 74 "/root/patron-artifact/data/juliet-test-suite-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_min_predec_31.c"
>                           )
>         {
2835a2858,2861
>         else
>         {
>             printLine("data value is too large to perform arithmetic safely.");
>         }
2837a2864,2869
> 
> void CWE191_Integer_Underflow__char_min_predec_31_good()
> {
>     goodG2B();
>     goodB2G();
> }
2847a2880,2882
>     printLine("Calling good()...");
>     CWE191_Integer_Underflow__char_min_predec_31_good();
>     printLine("Finished good()");
2853,2855d2887
<     printLine("Calling bad()...");
<     CWE191_Integer_Underflow__char_min_predec_31_bad();
<     printLine("Finished bad()");
